{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abdullah Usama\\\\Desktop\\\\we_project\\\\frontend\\\\src\\\\components\\\\UserPanel.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import Navbar from \"./Navbar\";\n// import { FaShoppingCart } from \"react-icons/fa\"; // Importing the cart icon\n// import { useNavigate } from \"react-router-dom\"; // Importing navigation hook\n\n// const UserPanel = () => {\n//   const [products, setProducts] = useState([]);\n//   const [error, setError] = useState(null);\n//   const [expandedCard, setExpandedCard] = useState(null); // Track which card is expanded\n//   const [cartCount, setCartCount] = useState(0); // Track the number of items in the cart\n//   const [successMessage, setSuccessMessage] = useState(null); // Track success messages\n\n//   const navigate = useNavigate(); // Initialize navigation\n\n//   // Fetch products from the API\n//   useEffect(() => {\n//     const fetchProducts = async () => {\n//       try {\n//         const response = await fetch(\"http://localhost:5000/api/products\");\n//         const data = await response.json();\n//         if (response.ok) {\n//           setProducts(data);\n//         } else {\n//           setError(data.message || \"Error fetching products\");\n//         }\n//       } catch (err) {\n//         setError(\"An error occurred while fetching products\");\n//       }\n//     };\n\n//     fetchProducts();\n//   }, []);\n\n//   // Handle adding products to the cart\n//   const addToCart = (productId, productName) => {\n//     setCartCount((prevCount) => prevCount + 1); // Increment cart count\n//     setSuccessMessage(`âœ… ${productName} has been added to your cart!`); // Set success message\n//     // Add functionality to send the product to the backend/cart here\n//   };\n\n//   // Toggle card expansion\n//   const toggleExpandCard = (index) => {\n//     setExpandedCard((prev) => (prev === index ? null : index)); // Toggle expanded card\n//     setSuccessMessage(null); // Clear any existing success messages when toggling cards\n//   };\n\n//   // Handle cart icon click\n//   const handleCartClick = () => {\n//     navigate(\"/cart\"); // Redirect to the cart page\n//   };\n\n//   // Effect to auto-dismiss success messages after 3 seconds\n//   useEffect(() => {\n//     if (successMessage) {\n//       const timer = setTimeout(() => {\n//         setSuccessMessage(null); // Clear the success message\n//       }, 3000); // 3 seconds\n\n//       // Cleanup the timer if the component unmounts or successMessage changes\n//       return () => clearTimeout(timer);\n//     }\n//   }, [successMessage]);\n\n//   return (\n//     <>\n//       <Navbar />\n//       <div className=\"bg-gray-50 min-h-screen relative\">\n//         <div className=\"container mx-auto py-8 px-4 relative\">\n//           {/* Cart Icon */}\n//           <div className=\"absolute top-4 right-4\">\n//             <button\n//               onClick={handleCartClick}\n//               className=\"relative text-gray-700 hover:text-green-700 focus:outline-none\"\n//               aria-label=\"Go to cart\"\n//             >\n//               <FaShoppingCart size={24} />\n//               {cartCount > 0 && (\n//                 <span className=\"absolute top-0 right-0 block h-2 w-2 rounded-full bg-red-600\"></span>\n//               )}\n//             </button>\n//           </div>\n\n//           <h2 className=\"text-3xl font-bold text-green-700 text-center mb-8\">\n//             Explore Our Products\n//           </h2>\n//           {error && (\n//             <div className=\"text-red-500 text-center mb-4\">{error}</div>\n//           )}\n\n//           {/* Background and Cards */}\n//           <div className=\"relative\">\n//             {expandedCard !== null && (\n//               <div\n//                 className=\"fixed inset-0 bg-gray-800 bg-opacity-40 z-10\"\n//                 onClick={() => setExpandedCard(null)}\n//               ></div>\n//             )}\n\n//             <div\n//               className={`grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6 ${\n//                 expandedCard !== null ? \"relative\" : \"\"\n//               }`}\n//             >\n//               {products.map((product, index) => {\n//                 // Determine if the card should be blurred\n//                 const isBlurred =\n//                   expandedCard !== null && expandedCard !== index;\n\n//                 return (\n//                   <div\n//                     key={product._id}\n//                     className={`relative bg-white border border-gray-200 rounded-lg shadow-sm transition-transform transform ${\n//                       expandedCard === index\n//                         ? \"scale-105 shadow-2xl z-20 cursor-pointer\"\n//                         : \"hover:shadow-md cursor-pointer\"\n//                     } ${isBlurred ? \"blur-sm pointer-events-none\" : \"\"}`}\n//                     onClick={() => toggleExpandCard(index)} // Toggle card expansion\n//                   >\n//                     <img\n//                       src={product.img}\n//                       alt={product.name}\n//                       className=\"w-full h-48 object-cover rounded-t-md\"\n//                     />\n//                     <div className=\"p-4\">\n//                       <h3 className=\"text-xl font-semibold text-gray-800\">\n//                         {product.name}\n//                       </h3>\n//                       <p className=\"text-gray-600 text-sm mb-2\">\n//                         Category: {product.category}\n//                       </p>\n//                       <p className=\"text-gray-600 mb-4\">\n//                         Price: Rs.{product.price}\n//                       </p>\n\n//                       {/* Conditionally render additional details */}\n//                       {expandedCard === index && (\n//                         <div className=\"mt-4 text-gray-700 relative\">\n//                           {/* Success Message */}\n//                           {successMessage && (\n//                             <div className=\"mb-2 bg-green-100 border border-green-400 text-green-700 px-4 py-2 rounded-md shadow-lg flex items-center transition-opacity duration-500\">\n//                               <span className=\"mr-2\">{successMessage}</span>\n//                               <svg\n//                                 className=\"w-4 h-4 fill-current text-green-700 cursor-pointer\"\n//                                 xmlns=\"http://www.w3.org/2000/svg\"\n//                                 viewBox=\"0 0 20 20\"\n//                                 onClick={() => setSuccessMessage(null)} // Allow manual dismissal\n//                               >\n//                                 <path\n//                                   fillRule=\"evenodd\"\n//                                   d=\"M10 8.586L15.95 2.636a1 1 0 011.414 1.414L11.414 10l5.95 5.95a1 1 0 01-1.414 1.414L10 11.414l-5.95 5.95a1 1 0 01-1.414-1.414L8.586 10 2.636 4.05a1 1 0 011.414-1.414L10 8.586z\"\n//                                   clipRule=\"evenodd\"\n//                                 />\n//                               </svg>\n//                             </div>\n//                           )}\n\n//                           <p className=\"text-sm mb-2\">\n//                             <strong>Stock:</strong> {product.stock}\n//                           </p>\n//                           <p className=\"text-sm mb-2\">\n//                             <strong>Description:</strong> {product.description}\n//                           </p>\n//                           <button\n//                             onClick={(e) => {\n//                               e.stopPropagation(); // Prevent card toggle on button click\n//                               addToCart(product._id, product.name); // Pass product name\n//                             }}\n//                             className=\"w-full py-2 bg-green-600 text-white font-medium rounded-md shadow hover:bg-green-700 transition focus:outline-none focus:ring-2 focus:ring-green-400\"\n//                           >\n//                             Add to Cart\n//                           </button>\n//                         </div>\n//                       )}\n//                     </div>\n//                   </div>\n//                 );\n//               })}\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     </>\n//   );\n// };\n\n// export default UserPanel;\n\n//-----------side panel cart----------------------------\n// src/UserPanel.js\n// import React, { useEffect, useState, useContext } from \"react\";\n// import Navbar from \"./Navbar\";\n// import { FaShoppingCart, FaSun, FaMoon } from \"react-icons/fa\"; // Importing sun and moon icons\n// import { FaPlus, FaMinus } from \"react-icons/fa\";\n// import backgroundImage from \"./img/background.png\";\n// import Footer from \"./Footer\";\n// import { ThemeContext } from \".././ThemeContext\"; // Import ThemeContext\n\n// const UserPanel = () => {\n//   const [products, setProducts] = useState([]);\n//   const [error, setError] = useState(null);\n//   const [expandedCard, setExpandedCard] = useState(null); // Track which card is expanded\n//   const [cartItems, setCartItems] = useState([]); // Track items in the cart\n//   const [isCartOpen, setIsCartOpen] = useState(false); // Track cart panel visibility\n//   const [successMessage, setSuccessMessage] = useState(null); // Track success messages\n//   const { darkMode, toggleDarkMode } = useContext(ThemeContext); // Use ThemeContext\n\n//   // Calculate total price of the cart\n//   const totalPrice = cartItems.reduce(\n//     (total, item) => total + item.quantity * item.price,\n//     0\n//   );\n\n//   // Calculate total cart count\n//   const cartCount = cartItems.reduce((total, item) => total + item.quantity, 0);\n\n//   // Fetch products from the API\n//   useEffect(() => {\n//     const fetchProducts = async () => {\n//       try {\n//         const response = await fetch(\"http://localhost:5000/api/products\");\n//         const data = await response.json();\n//         if (response.ok) {\n//           setProducts(data);\n//         } else {\n//           setError(data.message || \"Error fetching products\");\n//         }\n//       } catch (err) {\n//         setError(\"An error occurred while fetching products\");\n//       }\n//     };\n\n//     fetchProducts();\n//   }, []);\n\n//   // Handle adding products to the cart\n//   const addToCart = (productId, productName, productPrice) => {\n//     setCartItems((prevItems) => {\n//       const existingItem = prevItems.find((item) => item.id === productId);\n//       if (existingItem) {\n//         // If item exists, increase quantity\n//         return prevItems.map((item) =>\n//           item.id === productId\n//             ? { ...item, quantity: item.quantity + 1 }\n//             : item\n//         );\n//       } else {\n//         // If item doesn't exist, add new item with quantity 1\n//         return [\n//           ...prevItems,\n//           {\n//             id: productId,\n//             name: productName,\n//             price: productPrice,\n//             quantity: 1,\n//           },\n//         ];\n//       }\n//     });\n//     setSuccessMessage(`âœ… ${productName} has been added to your cart!`); // Set success message\n//   };\n\n//   // Toggle card expansion\n//   const toggleExpandCard = (index) => {\n//     setExpandedCard((prev) => (prev === index ? null : index)); // Toggle expanded card\n//     setSuccessMessage(null); // Clear any existing success messages when toggling cards\n//   };\n\n//   // Handle cart icon click to open the cart panel\n//   const handleCartClick = () => {\n//     setIsCartOpen(true); // Open the cart panel\n//   };\n\n//   // Effect to auto-dismiss success messages after 3 seconds\n//   useEffect(() => {\n//     if (successMessage) {\n//       const timer = setTimeout(() => {\n//         setSuccessMessage(null); // Clear the success message\n//       }, 3000); // 3 seconds\n\n//       // Cleanup the timer if the component unmounts or successMessage changes\n//       return () => clearTimeout(timer);\n//     }\n//   }, [successMessage]);\n\n//   const handleCheckout = async () => {\n//     if (cartItems.length === 0) {\n//       console.log(\"Cart is empty\");\n//       return; // Prevent proceeding with checkout if cart is empty\n//     }\n//     console.log(\"Checkout clicked\");\n//     // Prepare selected items\n//     const selectedItems = {\n//       items: cartItems.map((item) => ({\n//         id: item.id, // Keep the id the same\n//         quantity: item.quantity, // Keep the quantity as is\n//       })),\n//     };\n//     try {\n//       const response = await fetch(\"http://localhost:5000/get-all-products\");\n//       const allProducts = await response.json();\n//       const result = allProducts.map((product) => ({\n//         _id: product._id,\n//         name: product.name,\n//         price: product.price,\n//       }));\n\n//       const storeInventory = new Map(\n//         result.map((item) => [\n//           item._id,\n//           { priceInCents: item.price, name: item.name },\n//         ])\n//       );\n\n//       let totalPriceInCents = 0;\n\n//       // Iterate through selected items\n//       for (let i = 0; i < selectedItems.items.length; i++) {\n//         const { id, quantity } = selectedItems.items[i];\n//         const product = storeInventory.get(id);\n\n//         if (product) {\n//           totalPriceInCents += product.priceInCents * quantity;\n//         } else {\n//           console.warn(`Product with ID ${id} not found in store inventory.`);\n//         }\n//       }\n\n//       console.log(`Total Price: ${totalPriceInCents} cents`);\n\n//       if (totalPriceInCents >= 150) {\n//         const finalCheckoutResult = await fetch(\n//           \"http://localhost:5000/stripe-payout-session\",\n//           {\n//             method: \"POST\",\n//             headers: {\n//               \"Content-Type\": \"application/json\",\n//             },\n//             body: JSON.stringify({\n//               selectedItems,\n//               storeInventory: Array.from(storeInventory),\n//             }),\n//           }\n//         )\n//           .then((res) => {\n//             if (res.ok) return res.json();\n//             return res.json().then((json) => Promise.reject(json));\n//           })\n//           .then(({ url }) => {\n//             console.log(url);\n//             window.location = url;\n//           })\n//           .catch((e) => {\n//             console.error(e.error);\n//           });\n//       } else {\n//         console.log(\"Price must be greater than Rs. 150\");\n//         alert(\"Total Price must be greater than Rs. 150\");\n//       }\n//     } catch (e) {\n//       console.log(\"Error: \", e);\n//     }\n//   };\n\n//   return (\n//     <>\n//       <Navbar />\n//       {/* Main Container */}\n//       <div\n//         className={`min-h-screen relative transition-colors duration-300 ${\n//           darkMode ? \"bg-gray-900\" : \"bg-green-50\"\n//         }`}\n//       >\n//         <div className=\"container mx-auto py-8 px-4 relative\">\n//           {/* Top Right Controls: Dark Mode Toggle and Cart Icon */}\n//           <div className=\"absolute top-4 right-4 flex space-x-4\">\n//             {/* Dark Mode Toggle Button */}\n//             <button\n//               onClick={toggleDarkMode}\n//               className=\"flex items-center justify-center w-10 h-10 bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-gray-200 rounded-full focus:outline-none focus:ring-2 focus:ring-green-400\"\n//               aria-label=\"Toggle Dark Mode\"\n//             >\n//               {darkMode ? <FaSun /> : <FaMoon />}\n//             </button>\n\n//             {/* Cart Icon */}\n//             <button\n//               onClick={handleCartClick} // Open the cart panel\n//               className=\"relative text-gray-700 dark:text-gray-200 hover:text-green-700 dark:hover:text-green-400 focus:outline-none\"\n//               aria-label=\"Open cart\"\n//             >\n//               <FaShoppingCart size={24} />\n//               {cartCount > 0 && (\n//                 <span className=\"absolute top-0 right-0 block h-2 w-2 rounded-full bg-red-600\"></span>\n//               )}\n//             </button>\n//           </div>\n\n//           <h2 className=\"text-3xl font-bold text-green-700 dark:text-green-300 text-center mb-8\">\n//             Explore Our Products\n//           </h2>\n//           {error && (\n//             <div className=\"text-red-500 dark:text-red-400 text-center mb-4\">\n//               {error}\n//             </div>\n//           )}\n\n//           {/* Background and Cards */}\n//           <div className=\"relative\">\n//             {expandedCard !== null && (\n//               <div\n//                 className=\"fixed inset-0 bg-gray-800 bg-opacity-40 z-10\"\n//                 onClick={() => setExpandedCard(null)}\n//               ></div>\n//             )}\n\n//             <div\n//               className={`grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6 ${\n//                 expandedCard !== null ? \"relative\" : \"\"\n//               }`}\n//             >\n//               {products.map((product, index) => {\n//                 // Determine if the card should be blurred\n//                 const isBlurred =\n//                   expandedCard !== null && expandedCard !== index;\n\n//                 return (\n//                   <div\n//                     key={product._id}\n//                     className={`relative bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg shadow-sm transition-transform transform ${\n//                       expandedCard === index\n//                         ? \"scale-105 shadow-2xl z-20 cursor-pointer\"\n//                         : \"hover:shadow-xl cursor-pointer\"\n//                     } ${isBlurred ? \"blur-sm pointer-events-none\" : \"\"}`}\n//                     onClick={() => toggleExpandCard(index)} // Toggle card expansion\n//                   >\n//                     <img\n//                       src={product.img}\n//                       alt={product.name}\n//                       className=\"w-full h-48 object-cover rounded-t-md\"\n//                     />\n//                     <div className=\"p-4\">\n//                       <h3 className=\"text-xl font-semibold text-gray-800 dark:text-gray-200\">\n//                         {product.name}\n//                       </h3>\n//                       <p className=\"text-gray-600 dark:text-gray-400 text-sm mb-2\">\n//                         Category: {product.category}\n//                       </p>\n//                       <p className=\"text-gray-600 dark:text-gray-400 mb-4\">\n//                         Price: Rs.{product.price}\n//                       </p>\n\n//                       {/* Conditionally render additional details */}\n//                       {expandedCard === index && (\n//                         <div className=\"mt-4 text-gray-700 dark:text-gray-300 relative\">\n//                           {/* Success Message */}\n//                           {successMessage && (\n//                             <div className=\"mb-2 bg-green-100 dark:bg-green-700 border border-green-400 dark:border-green-600 text-green-700 dark:text-green-100 px-4 py-2 rounded-md shadow-lg flex items-center transition-opacity duration-500\">\n//                               <span className=\"mr-2\">{successMessage}</span>\n//                               <svg\n//                                 className=\"w-4 h-4 fill-current text-green-700 dark:text-green-100 cursor-pointer\"\n//                                 xmlns=\"http://www.w3.org/2000/svg\"\n//                                 viewBox=\"0 0 20 20\"\n//                                 onClick={() => setSuccessMessage(null)} // Allow manual dismissal\n//                               >\n//                                 <path\n//                                   fillRule=\"evenodd\"\n//                                   d=\"M10 8.586L15.95 2.636a1 1 0 011.414 1.414L11.414 10l5.95 5.95a1 1 0 01-1.414 1.414L10 11.414l-5.95 5.95a1 1 0 01-1.414-1.414L8.586 10 2.636 4.05a1 1 0 011.414-1.414L10 8.586z\"\n//                                   clipRule=\"evenodd\"\n//                                 />\n//                               </svg>\n//                             </div>\n//                           )}\n\n//                           <p className=\"text-sm mb-2\">\n//                             <strong>Stock:</strong> {product.stock}\n//                           </p>\n//                           <p className=\"text-sm mb-2\">\n//                             <strong>Description:</strong> {product.description}\n//                           </p>\n//                           <button\n//                             onClick={(e) => {\n//                               e.stopPropagation(); // Prevent card toggle on button click\n//                               addToCart(\n//                                 product._id,\n//                                 product.name,\n//                                 product.price\n//                               ); // Pass product details\n//                             }}\n//                             className=\"w-full py-2 bg-green-600 dark:bg-green-500 text-white font-medium rounded-md shadow hover:bg-green-700 dark:hover:bg-green-600 transition focus:outline-none\"\n//                           >\n//                             Add to Cart\n//                           </button>\n//                         </div>\n//                       )}\n//                     </div>\n//                   </div>\n//                 );\n//               })}\n//             </div>\n//           </div>\n//         </div>\n\n//         {/* Side Panel for Cart */}\n//         {isCartOpen && (\n//           <>\n//             {/* Overlay */}\n//             <div\n//               className=\"fixed inset-0 bg-black bg-opacity-50 z-30\"\n//               onClick={() => setIsCartOpen(false)}\n//             ></div>\n\n//             {/* Side Panel */}\n//             <div className=\"fixed top-0 right-0 w-80 bg-white dark:bg-gray-800 h-full shadow-lg z-40 transform transition-transform duration-300\">\n//               <div className=\"flex justify-between items-center p-4 border-b dark:border-gray-700\">\n//                 <h2 className=\"text-xl font-semibold text-gray-800 dark:text-gray-200\">\n//                   Your Cart\n//                 </h2>\n//                 <button\n//                   onClick={() => setIsCartOpen(false)}\n//                   aria-label=\"Close cart\"\n//                 >\n//                   <svg\n//                     className=\"w-6 h-6 text-gray-700 dark:text-gray-300\"\n//                     xmlns=\"http://www.w3.org/2000/svg\"\n//                     fill=\"none\"\n//                     viewBox=\"0 0 24 24\"\n//                     stroke=\"currentColor\"\n//                   >\n//                     <path\n//                       strokeLinecap=\"round\"\n//                       strokeLinejoin=\"round\"\n//                       strokeWidth={2}\n//                       d=\"M6 18L18 6M6 6l12 12\"\n//                     />\n//                   </svg>\n//                 </button>\n//               </div>\n\n//               <div className=\"p-4 overflow-y-auto h-[calc(100%-4rem)]\">\n//                 {cartItems.length === 0 ? (\n//                   <p className=\"text-gray-600 dark:text-gray-400\">\n//                     Your cart is empty.\n//                   </p>\n//                 ) : (\n//                   cartItems.map((item) => (\n//                     <div\n//                       key={item.id}\n//                       className=\"flex justify-between items-center mb-4 border-b dark:border-gray-700 pb-2\"\n//                     >\n//                       <div>\n//                         <h3 className=\"font-medium text-gray-800 dark:text-gray-200\">\n//                           {item.name}\n//                         </h3>\n//                         <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n//                           Quantity: {item.quantity}\n//                         </p>\n//                       </div>\n//                       <div className=\"flex items-center space-x-2\">\n//                         <button\n//                           onClick={() =>\n//                             setCartItems((prevItems) =>\n//                               prevItems.map((cartItem) =>\n//                                 cartItem.id === item.id\n//                                   ? {\n//                                       ...cartItem,\n//                                       quantity: cartItem.quantity + 1,\n//                                     }\n//                                   : cartItem\n//                               )\n//                             )\n//                           }\n//                           className=\"flex items-center justify-center w-8 h-8 bg-green-300 dark:bg-green-600 text-white rounded-full hover:bg-green-700 dark:hover:bg-green-700 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-green-400\"\n//                           aria-label=\"Increase quantity\"\n//                         >\n//                           <FaPlus />\n//                         </button>\n\n//                         <button\n//                           onClick={() =>\n//                             setCartItems((prevItems) =>\n//                               prevItems\n//                                 .map((cartItem) =>\n//                                   cartItem.id === item.id\n//                                     ? {\n//                                         ...cartItem,\n//                                         quantity: cartItem.quantity - 1,\n//                                       }\n//                                     : cartItem\n//                                 )\n//                                 .filter((cartItem) => cartItem.quantity > 0)\n//                             )\n//                           }\n//                           className=\"flex items-center justify-center w-8 h-8 bg-red-300 dark:bg-red-600 text-white rounded-full hover:bg-red-700 dark:hover:bg-red-700 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-red-400\"\n//                           aria-label=\"Decrease quantity\"\n//                         >\n//                           <FaMinus />\n//                         </button>\n//                         <button\n//                           onClick={() =>\n//                             setCartItems((prevItems) =>\n//                               prevItems.filter(\n//                                 (cartItem) => cartItem.id !== item.id\n//                               )\n//                             )\n//                           }\n//                           className=\"px-2 py-1 bg-gray-300 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded\"\n//                           aria-label=\"Remove item\"\n//                         >\n//                           Remove\n//                         </button>\n//                       </div>\n//                     </div>\n//                   ))\n//                 )}\n//                 {cartItems.length > 0 && (\n//                   <div className=\"mt-4 border-t dark:border-gray-700 pt-2\">\n//                     <h3 className=\"text-lg font-semibold text-gray-800 dark:text-gray-200\">\n//                       Total Price: Rs.{totalPrice}\n//                     </h3>\n//                   </div>\n//                 )}\n\n//                 {cartItems.length > 0 && (\n//                   <button\n//                     className=\"w-full py-2 bg-blue-600 dark:bg-blue-500 text-white font-semibold rounded-md shadow hover:bg-blue-700 dark:hover:bg-blue-600 transition-colors duration-200\"\n//                     onClick={handleCheckout}\n//                   >\n//                     Checkout\n//                   </button>\n//                 )}\n//               </div>\n//             </div>\n//           </>\n//         )}\n//       </div>\n//       <Footer />\n//     </>\n//   );\n// };\n\n// export default UserPanel;\n\n//----smooth cart functionality--------------\n// src/UserPanel.js\nimport React, { useEffect, useState, useContext } from \"react\";\nimport Navbar from \"./Navbar\";\nimport { FaShoppingCart, FaSun, FaMoon } from \"react-icons/fa\"; // Importing sun and moon icons\nimport { FaPlus, FaMinus } from \"react-icons/fa\";\nimport backgroundImage from \"./img/background.png\";\nimport Footer from \"./Footer\";\nimport { ThemeContext } from \".././ThemeContext\"; // Import ThemeContext\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UserPanel = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [error, setError] = useState(null);\n  const [expandedCard, setExpandedCard] = useState(null); // Track which card is expanded\n  const [cartItems, setCartItems] = useState([]); // Track items in the cart\n  const [isCartOpen, setIsCartOpen] = useState(false); // Track cart panel visibility\n  const [successMessage, setSuccessMessage] = useState(null); // Track success messages\n  const {\n    darkMode,\n    toggleDarkMode\n  } = useContext(ThemeContext); // Use ThemeContext\n\n  // Calculate total price of the cart\n  const totalPrice = cartItems.reduce((total, item) => total + item.quantity * item.price, 0);\n\n  // Calculate total cart count\n  const cartCount = cartItems.reduce((total, item) => total + item.quantity, 0);\n\n  // Fetch products from the API\n  useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5000/api/products\");\n        const data = await response.json();\n        if (response.ok) {\n          setProducts(data);\n        } else {\n          setError(data.message || \"Error fetching products\");\n        }\n      } catch (err) {\n        setError(\"An error occurred while fetching products\");\n      }\n    };\n    fetchProducts();\n  }, []);\n\n  // Handle adding products to the cart\n  const addToCart = (productId, productName, productPrice) => {\n    setCartItems(prevItems => {\n      const existingItem = prevItems.find(item => item.id === productId);\n      if (existingItem) {\n        // If item exists, increase quantity\n        return prevItems.map(item => item.id === productId ? {\n          ...item,\n          quantity: item.quantity + 1\n        } : item);\n      } else {\n        // If item doesn't exist, add new item with quantity 1\n        return [...prevItems, {\n          id: productId,\n          name: productName,\n          price: productPrice,\n          quantity: 1\n        }];\n      }\n    });\n    setSuccessMessage(`âœ… ${productName} has been added to your cart!`); // Set success message\n  };\n\n  // Toggle card expansion\n  const toggleExpandCard = index => {\n    setExpandedCard(prev => prev === index ? null : index); // Toggle expanded card\n    setSuccessMessage(null); // Clear any existing success messages when toggling cards\n  };\n\n  // Handle cart icon click to open the cart panel\n  const handleCartClick = () => {\n    setIsCartOpen(true); // Open the cart panel\n  };\n\n  // Handle cart close (clicking on overlay or close button)\n  const handleCartClose = () => {\n    setIsCartOpen(false); // Close the cart panel\n  };\n\n  // Effect to auto-dismiss success messages after 3 seconds\n  useEffect(() => {\n    if (successMessage) {\n      const timer = setTimeout(() => {\n        setSuccessMessage(null); // Clear the success message\n      }, 3000); // 3 seconds\n\n      // Cleanup the timer if the component unmounts or successMessage changes\n      return () => clearTimeout(timer);\n    }\n  }, [successMessage]);\n  const handleCheckout = async () => {\n    if (cartItems.length === 0) {\n      console.log(\"Cart is empty\");\n      return; // Prevent proceeding with checkout if cart is empty\n    }\n    console.log(\"Checkout clicked\");\n    // Prepare selected items\n    const selectedItems = {\n      items: cartItems.map(item => ({\n        id: item.id,\n        // Keep the id the same\n        quantity: item.quantity // Keep the quantity as is\n      }))\n    };\n    try {\n      const response = await fetch(\"http://localhost:5000/get-all-products\");\n      const allProducts = await response.json();\n      const result = allProducts.map(product => ({\n        _id: product._id,\n        name: product.name,\n        price: product.price\n      }));\n      const storeInventory = new Map(result.map(item => [item._id, {\n        priceInCents: item.price,\n        name: item.name\n      }]));\n      let totalPriceInCents = 0;\n\n      // Iterate through selected items\n      for (let i = 0; i < selectedItems.items.length; i++) {\n        const {\n          id,\n          quantity\n        } = selectedItems.items[i];\n        const product = storeInventory.get(id);\n        if (product) {\n          totalPriceInCents += product.priceInCents * quantity;\n        } else {\n          console.warn(`Product with ID ${id} not found in store inventory.`);\n        }\n      }\n      console.log(`Total Price: ${totalPriceInCents} cents`);\n      if (totalPriceInCents >= 150) {\n        const finalCheckoutResult = await fetch(\"http://localhost:5000/stripe-payout-session\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            selectedItems,\n            storeInventory: Array.from(storeInventory)\n          })\n        }).then(res => {\n          if (res.ok) return res.json();\n          return res.json().then(json => Promise.reject(json));\n        }).then(({\n          url\n        }) => {\n          console.log(url);\n          window.location = url;\n        }).catch(e => {\n          console.error(e.error);\n        });\n      } else {\n        console.log(\"Price must be greater than Rs. 150\");\n        alert(\"Total Price must be greater than Rs. 150\");\n      }\n    } catch (e) {\n      console.log(\"Error: \", e);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 826,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `min-h-screen relative transition-colors duration-300 ${darkMode ? \"bg-gray-900\" : \"bg-green-50\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mx-auto py-8 px-4 relative\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute top-4 right-4 flex space-x-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: toggleDarkMode,\n            className: \"flex items-center justify-center w-10 h-10 bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-gray-200 rounded-full focus:outline-none focus:ring-2 focus:ring-green-400\",\n            \"aria-label\": \"Toggle Dark Mode\",\n            children: darkMode ? /*#__PURE__*/_jsxDEV(FaSun, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 842,\n              columnNumber: 27\n            }, this) : /*#__PURE__*/_jsxDEV(FaMoon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 842,\n              columnNumber: 39\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 837,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCartClick // Open the cart panel\n            ,\n            className: \"relative text-gray-700 dark:text-gray-200 hover:text-green-700 dark:hover:text-green-400 focus:outline-none\",\n            \"aria-label\": \"Open cart\",\n            children: [/*#__PURE__*/_jsxDEV(FaShoppingCart, {\n              size: 24\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 851,\n              columnNumber: 15\n            }, this), cartCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"absolute top-0 right-0 block h-2 w-2 rounded-full bg-red-600\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 853,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 846,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 835,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-3xl font-bold text-green-700 dark:text-green-300 text-center mb-8\",\n          children: \"Explore Our Products\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 858,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-red-500 dark:text-red-400 text-center mb-4\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 862,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative\",\n          children: [expandedCard !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"fixed inset-0 bg-gray-800 bg-opacity-40 z-10\",\n            onClick: () => setExpandedCard(null)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 870,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6 ${expandedCard !== null ? \"relative\" : \"\"}`,\n            children: products.map((product, index) => {\n              // Determine if the card should be blurred\n              const isBlurred = expandedCard !== null && expandedCard !== index;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `relative bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg shadow-sm transition-transform transform ${expandedCard === index ? \"scale-105 shadow-2xl z-20 cursor-pointer\" : \"hover:shadow-xl cursor-pointer\"} ${isBlurred ? \"blur-sm pointer-events-none\" : \"\"}`,\n                onClick: () => toggleExpandCard(index) // Toggle card expansion\n                ,\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: product.img,\n                  alt: product.name,\n                  className: \"w-full h-48 object-cover rounded-t-md\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 896,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"p-4\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"text-xl font-semibold text-gray-800 dark:text-gray-200\",\n                    children: product.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 902,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-gray-600 dark:text-gray-400 text-sm mb-2\",\n                    children: [\"Category: \", product.category]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 905,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-gray-600 dark:text-gray-400 mb-4\",\n                    children: [\"Price: Rs.\", product.price]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 908,\n                    columnNumber: 23\n                  }, this), expandedCard === index && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mt-4 text-gray-700 dark:text-gray-300 relative\",\n                    children: [successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-2 bg-green-100 dark:bg-green-700 border border-green-400 dark:border-green-600 text-green-700 dark:text-green-100 px-4 py-2 rounded-md shadow-lg flex items-center transition-opacity duration-500\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"mr-2\",\n                        children: successMessage\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 918,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n                        className: \"w-4 h-4 fill-current text-green-700 dark:text-green-100 cursor-pointer\",\n                        xmlns: \"http://www.w3.org/2000/svg\",\n                        viewBox: \"0 0 20 20\",\n                        onClick: () => setSuccessMessage(null) // Allow manual dismissal\n                        ,\n                        children: /*#__PURE__*/_jsxDEV(\"path\", {\n                          fillRule: \"evenodd\",\n                          d: \"M10 8.586L15.95 2.636a1 1 0 011.414 1.414L11.414 10l5.95 5.95a1 1 0 01-1.414 1.414L10 11.414l-5.95 5.95a1 1 0 01-1.414-1.414L8.586 10 2.636 4.05a1 1 0 011.414-1.414L10 8.586z\",\n                          clipRule: \"evenodd\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 925,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 919,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 917,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-sm mb-2\",\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Stock:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 935,\n                        columnNumber: 29\n                      }, this), \" \", product.stock]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 934,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-sm mb-2\",\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Description:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 938,\n                        columnNumber: 29\n                      }, this), \" \", product.description]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 937,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: e => {\n                        e.stopPropagation(); // Prevent card toggle on button click\n                        addToCart(product._id, product.name, product.price); // Pass product details\n                      },\n                      className: \"w-full py-2 bg-green-600 dark:bg-green-500 text-white font-medium rounded-md shadow hover:bg-green-700 dark:hover:bg-green-600 transition focus:outline-none\",\n                      children: \"Add to Cart\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 940,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 914,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 901,\n                  columnNumber: 21\n                }, this)]\n              }, product._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 887,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 876,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 868,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 833,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `fixed inset-0 z-30 transition-opacity duration-300 ${isCartOpen ? \"opacity-50 pointer-events-auto\" : \"opacity-0 pointer-events-none\"} bg-black bg-opacity-50`,\n        onClick: handleCartClose,\n        \"aria-hidden\": isCartOpen ? \"false\" : \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 965,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `fixed top-0 right-0 w-80 bg-white dark:bg-gray-800 h-full shadow-lg z-40 transform transition-transform duration-300 ${isCartOpen ? \"translate-x-0\" : \"translate-x-full\"}`,\n        \"aria-hidden\": !isCartOpen ? \"true\" : \"false\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center p-4 border-b dark:border-gray-700\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-semibold text-gray-800 dark:text-gray-200\",\n            children: \"Your Cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 982,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCartClose,\n            \"aria-label\": \"Close cart\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"w-6 h-6 text-gray-700 dark:text-gray-300\",\n              xmlns: \"http://www.w3.org/2000/svg\",\n              fill: \"none\",\n              viewBox: \"0 0 24 24\",\n              stroke: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M6 18L18 6M6 6l12 12\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 993,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 986,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 985,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 981,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 overflow-y-auto h-[calc(100%-4rem)]\",\n          children: [cartItems.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600 dark:text-gray-400\",\n            children: \"Your cart is empty.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1005,\n            columnNumber: 15\n          }, this) : cartItems.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center mb-4 border-b dark:border-gray-700 pb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"font-medium text-gray-800 dark:text-gray-200\",\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1015,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-gray-600 dark:text-gray-400\",\n                children: [\"Quantity: \", item.quantity]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1018,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1014,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center space-x-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setCartItems(prevItems => prevItems.map(cartItem => cartItem.id === item.id ? {\n                  ...cartItem,\n                  quantity: cartItem.quantity + 1\n                } : cartItem)),\n                className: \"flex items-center justify-center w-8 h-8 bg-green-300 dark:bg-green-600 text-white rounded-full hover:bg-green-700 dark:hover:bg-green-700 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-green-400\",\n                \"aria-label\": \"Increase quantity\",\n                children: /*#__PURE__*/_jsxDEV(FaPlus, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1039,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1023,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setCartItems(prevItems => prevItems.map(cartItem => cartItem.id === item.id ? {\n                  ...cartItem,\n                  quantity: cartItem.quantity - 1\n                } : cartItem).filter(cartItem => cartItem.quantity > 0)),\n                className: \"flex items-center justify-center w-8 h-8 bg-red-300 dark:bg-red-600 text-white rounded-full hover:bg-red-700 dark:hover:bg-red-700 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-red-400\",\n                \"aria-label\": \"Decrease quantity\",\n                children: /*#__PURE__*/_jsxDEV(FaMinus, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1060,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1042,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setCartItems(prevItems => prevItems.filter(cartItem => cartItem.id !== item.id)),\n                className: \"px-2 py-1 bg-gray-300 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded\",\n                \"aria-label\": \"Remove item\",\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1062,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1022,\n              columnNumber: 19\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1010,\n            columnNumber: 17\n          }, this)), cartItems.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4 border-t dark:border-gray-700 pt-2\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-semibold text-gray-800 dark:text-gray-200\",\n              children: [\"Total Price: Rs.\", totalPrice]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1081,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1080,\n            columnNumber: 15\n          }, this), cartItems.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"w-full py-2 bg-blue-600 dark:bg-blue-500 text-white font-semibold rounded-md shadow hover:bg-blue-700 dark:hover:bg-blue-600 transition-colors duration-200\",\n            onClick: handleCheckout,\n            children: \"Checkout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1088,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1003,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 975,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 828,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1098,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(UserPanel, \"y/EHXAt13iMYXIrVj0Y/mKWrgI8=\");\n_c = UserPanel;\nexport default UserPanel;\nvar _c;\n$RefreshReg$(_c, \"UserPanel\");","map":{"version":3,"names":["React","useEffect","useState","useContext","Navbar","FaShoppingCart","FaSun","FaMoon","FaPlus","FaMinus","backgroundImage","Footer","ThemeContext","jsxDEV","_jsxDEV","Fragment","_Fragment","UserPanel","_s","products","setProducts","error","setError","expandedCard","setExpandedCard","cartItems","setCartItems","isCartOpen","setIsCartOpen","successMessage","setSuccessMessage","darkMode","toggleDarkMode","totalPrice","reduce","total","item","quantity","price","cartCount","fetchProducts","response","fetch","data","json","ok","message","err","addToCart","productId","productName","productPrice","prevItems","existingItem","find","id","map","name","toggleExpandCard","index","prev","handleCartClick","handleCartClose","timer","setTimeout","clearTimeout","handleCheckout","length","console","log","selectedItems","items","allProducts","result","product","_id","storeInventory","Map","priceInCents","totalPriceInCents","i","get","warn","finalCheckoutResult","method","headers","body","JSON","stringify","Array","from","then","res","Promise","reject","url","window","location","catch","e","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","size","isBlurred","src","img","alt","category","xmlns","viewBox","fillRule","d","clipRule","stock","description","stopPropagation","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","cartItem","filter","_c","$RefreshReg$"],"sources":["C:/Users/Abdullah Usama/Desktop/we_project/frontend/src/components/UserPanel.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import Navbar from \"./Navbar\";\r\n// import { FaShoppingCart } from \"react-icons/fa\"; // Importing the cart icon\r\n// import { useNavigate } from \"react-router-dom\"; // Importing navigation hook\r\n\r\n// const UserPanel = () => {\r\n//   const [products, setProducts] = useState([]);\r\n//   const [error, setError] = useState(null);\r\n//   const [expandedCard, setExpandedCard] = useState(null); // Track which card is expanded\r\n//   const [cartCount, setCartCount] = useState(0); // Track the number of items in the cart\r\n//   const [successMessage, setSuccessMessage] = useState(null); // Track success messages\r\n\r\n//   const navigate = useNavigate(); // Initialize navigation\r\n\r\n//   // Fetch products from the API\r\n//   useEffect(() => {\r\n//     const fetchProducts = async () => {\r\n//       try {\r\n//         const response = await fetch(\"http://localhost:5000/api/products\");\r\n//         const data = await response.json();\r\n//         if (response.ok) {\r\n//           setProducts(data);\r\n//         } else {\r\n//           setError(data.message || \"Error fetching products\");\r\n//         }\r\n//       } catch (err) {\r\n//         setError(\"An error occurred while fetching products\");\r\n//       }\r\n//     };\r\n\r\n//     fetchProducts();\r\n//   }, []);\r\n\r\n//   // Handle adding products to the cart\r\n//   const addToCart = (productId, productName) => {\r\n//     setCartCount((prevCount) => prevCount + 1); // Increment cart count\r\n//     setSuccessMessage(`âœ… ${productName} has been added to your cart!`); // Set success message\r\n//     // Add functionality to send the product to the backend/cart here\r\n//   };\r\n\r\n//   // Toggle card expansion\r\n//   const toggleExpandCard = (index) => {\r\n//     setExpandedCard((prev) => (prev === index ? null : index)); // Toggle expanded card\r\n//     setSuccessMessage(null); // Clear any existing success messages when toggling cards\r\n//   };\r\n\r\n//   // Handle cart icon click\r\n//   const handleCartClick = () => {\r\n//     navigate(\"/cart\"); // Redirect to the cart page\r\n//   };\r\n\r\n//   // Effect to auto-dismiss success messages after 3 seconds\r\n//   useEffect(() => {\r\n//     if (successMessage) {\r\n//       const timer = setTimeout(() => {\r\n//         setSuccessMessage(null); // Clear the success message\r\n//       }, 3000); // 3 seconds\r\n\r\n//       // Cleanup the timer if the component unmounts or successMessage changes\r\n//       return () => clearTimeout(timer);\r\n//     }\r\n//   }, [successMessage]);\r\n\r\n//   return (\r\n//     <>\r\n//       <Navbar />\r\n//       <div className=\"bg-gray-50 min-h-screen relative\">\r\n//         <div className=\"container mx-auto py-8 px-4 relative\">\r\n//           {/* Cart Icon */}\r\n//           <div className=\"absolute top-4 right-4\">\r\n//             <button\r\n//               onClick={handleCartClick}\r\n//               className=\"relative text-gray-700 hover:text-green-700 focus:outline-none\"\r\n//               aria-label=\"Go to cart\"\r\n//             >\r\n//               <FaShoppingCart size={24} />\r\n//               {cartCount > 0 && (\r\n//                 <span className=\"absolute top-0 right-0 block h-2 w-2 rounded-full bg-red-600\"></span>\r\n//               )}\r\n//             </button>\r\n//           </div>\r\n\r\n//           <h2 className=\"text-3xl font-bold text-green-700 text-center mb-8\">\r\n//             Explore Our Products\r\n//           </h2>\r\n//           {error && (\r\n//             <div className=\"text-red-500 text-center mb-4\">{error}</div>\r\n//           )}\r\n\r\n//           {/* Background and Cards */}\r\n//           <div className=\"relative\">\r\n//             {expandedCard !== null && (\r\n//               <div\r\n//                 className=\"fixed inset-0 bg-gray-800 bg-opacity-40 z-10\"\r\n//                 onClick={() => setExpandedCard(null)}\r\n//               ></div>\r\n//             )}\r\n\r\n//             <div\r\n//               className={`grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6 ${\r\n//                 expandedCard !== null ? \"relative\" : \"\"\r\n//               }`}\r\n//             >\r\n//               {products.map((product, index) => {\r\n//                 // Determine if the card should be blurred\r\n//                 const isBlurred =\r\n//                   expandedCard !== null && expandedCard !== index;\r\n\r\n//                 return (\r\n//                   <div\r\n//                     key={product._id}\r\n//                     className={`relative bg-white border border-gray-200 rounded-lg shadow-sm transition-transform transform ${\r\n//                       expandedCard === index\r\n//                         ? \"scale-105 shadow-2xl z-20 cursor-pointer\"\r\n//                         : \"hover:shadow-md cursor-pointer\"\r\n//                     } ${isBlurred ? \"blur-sm pointer-events-none\" : \"\"}`}\r\n//                     onClick={() => toggleExpandCard(index)} // Toggle card expansion\r\n//                   >\r\n//                     <img\r\n//                       src={product.img}\r\n//                       alt={product.name}\r\n//                       className=\"w-full h-48 object-cover rounded-t-md\"\r\n//                     />\r\n//                     <div className=\"p-4\">\r\n//                       <h3 className=\"text-xl font-semibold text-gray-800\">\r\n//                         {product.name}\r\n//                       </h3>\r\n//                       <p className=\"text-gray-600 text-sm mb-2\">\r\n//                         Category: {product.category}\r\n//                       </p>\r\n//                       <p className=\"text-gray-600 mb-4\">\r\n//                         Price: Rs.{product.price}\r\n//                       </p>\r\n\r\n//                       {/* Conditionally render additional details */}\r\n//                       {expandedCard === index && (\r\n//                         <div className=\"mt-4 text-gray-700 relative\">\r\n//                           {/* Success Message */}\r\n//                           {successMessage && (\r\n//                             <div className=\"mb-2 bg-green-100 border border-green-400 text-green-700 px-4 py-2 rounded-md shadow-lg flex items-center transition-opacity duration-500\">\r\n//                               <span className=\"mr-2\">{successMessage}</span>\r\n//                               <svg\r\n//                                 className=\"w-4 h-4 fill-current text-green-700 cursor-pointer\"\r\n//                                 xmlns=\"http://www.w3.org/2000/svg\"\r\n//                                 viewBox=\"0 0 20 20\"\r\n//                                 onClick={() => setSuccessMessage(null)} // Allow manual dismissal\r\n//                               >\r\n//                                 <path\r\n//                                   fillRule=\"evenodd\"\r\n//                                   d=\"M10 8.586L15.95 2.636a1 1 0 011.414 1.414L11.414 10l5.95 5.95a1 1 0 01-1.414 1.414L10 11.414l-5.95 5.95a1 1 0 01-1.414-1.414L8.586 10 2.636 4.05a1 1 0 011.414-1.414L10 8.586z\"\r\n//                                   clipRule=\"evenodd\"\r\n//                                 />\r\n//                               </svg>\r\n//                             </div>\r\n//                           )}\r\n\r\n//                           <p className=\"text-sm mb-2\">\r\n//                             <strong>Stock:</strong> {product.stock}\r\n//                           </p>\r\n//                           <p className=\"text-sm mb-2\">\r\n//                             <strong>Description:</strong> {product.description}\r\n//                           </p>\r\n//                           <button\r\n//                             onClick={(e) => {\r\n//                               e.stopPropagation(); // Prevent card toggle on button click\r\n//                               addToCart(product._id, product.name); // Pass product name\r\n//                             }}\r\n//                             className=\"w-full py-2 bg-green-600 text-white font-medium rounded-md shadow hover:bg-green-700 transition focus:outline-none focus:ring-2 focus:ring-green-400\"\r\n//                           >\r\n//                             Add to Cart\r\n//                           </button>\r\n//                         </div>\r\n//                       )}\r\n//                     </div>\r\n//                   </div>\r\n//                 );\r\n//               })}\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default UserPanel;\r\n\r\n//-----------side panel cart----------------------------\r\n// src/UserPanel.js\r\n// import React, { useEffect, useState, useContext } from \"react\";\r\n// import Navbar from \"./Navbar\";\r\n// import { FaShoppingCart, FaSun, FaMoon } from \"react-icons/fa\"; // Importing sun and moon icons\r\n// import { FaPlus, FaMinus } from \"react-icons/fa\";\r\n// import backgroundImage from \"./img/background.png\";\r\n// import Footer from \"./Footer\";\r\n// import { ThemeContext } from \".././ThemeContext\"; // Import ThemeContext\r\n\r\n// const UserPanel = () => {\r\n//   const [products, setProducts] = useState([]);\r\n//   const [error, setError] = useState(null);\r\n//   const [expandedCard, setExpandedCard] = useState(null); // Track which card is expanded\r\n//   const [cartItems, setCartItems] = useState([]); // Track items in the cart\r\n//   const [isCartOpen, setIsCartOpen] = useState(false); // Track cart panel visibility\r\n//   const [successMessage, setSuccessMessage] = useState(null); // Track success messages\r\n//   const { darkMode, toggleDarkMode } = useContext(ThemeContext); // Use ThemeContext\r\n\r\n//   // Calculate total price of the cart\r\n//   const totalPrice = cartItems.reduce(\r\n//     (total, item) => total + item.quantity * item.price,\r\n//     0\r\n//   );\r\n\r\n//   // Calculate total cart count\r\n//   const cartCount = cartItems.reduce((total, item) => total + item.quantity, 0);\r\n\r\n//   // Fetch products from the API\r\n//   useEffect(() => {\r\n//     const fetchProducts = async () => {\r\n//       try {\r\n//         const response = await fetch(\"http://localhost:5000/api/products\");\r\n//         const data = await response.json();\r\n//         if (response.ok) {\r\n//           setProducts(data);\r\n//         } else {\r\n//           setError(data.message || \"Error fetching products\");\r\n//         }\r\n//       } catch (err) {\r\n//         setError(\"An error occurred while fetching products\");\r\n//       }\r\n//     };\r\n\r\n//     fetchProducts();\r\n//   }, []);\r\n\r\n//   // Handle adding products to the cart\r\n//   const addToCart = (productId, productName, productPrice) => {\r\n//     setCartItems((prevItems) => {\r\n//       const existingItem = prevItems.find((item) => item.id === productId);\r\n//       if (existingItem) {\r\n//         // If item exists, increase quantity\r\n//         return prevItems.map((item) =>\r\n//           item.id === productId\r\n//             ? { ...item, quantity: item.quantity + 1 }\r\n//             : item\r\n//         );\r\n//       } else {\r\n//         // If item doesn't exist, add new item with quantity 1\r\n//         return [\r\n//           ...prevItems,\r\n//           {\r\n//             id: productId,\r\n//             name: productName,\r\n//             price: productPrice,\r\n//             quantity: 1,\r\n//           },\r\n//         ];\r\n//       }\r\n//     });\r\n//     setSuccessMessage(`âœ… ${productName} has been added to your cart!`); // Set success message\r\n//   };\r\n\r\n//   // Toggle card expansion\r\n//   const toggleExpandCard = (index) => {\r\n//     setExpandedCard((prev) => (prev === index ? null : index)); // Toggle expanded card\r\n//     setSuccessMessage(null); // Clear any existing success messages when toggling cards\r\n//   };\r\n\r\n//   // Handle cart icon click to open the cart panel\r\n//   const handleCartClick = () => {\r\n//     setIsCartOpen(true); // Open the cart panel\r\n//   };\r\n\r\n//   // Effect to auto-dismiss success messages after 3 seconds\r\n//   useEffect(() => {\r\n//     if (successMessage) {\r\n//       const timer = setTimeout(() => {\r\n//         setSuccessMessage(null); // Clear the success message\r\n//       }, 3000); // 3 seconds\r\n\r\n//       // Cleanup the timer if the component unmounts or successMessage changes\r\n//       return () => clearTimeout(timer);\r\n//     }\r\n//   }, [successMessage]);\r\n\r\n//   const handleCheckout = async () => {\r\n//     if (cartItems.length === 0) {\r\n//       console.log(\"Cart is empty\");\r\n//       return; // Prevent proceeding with checkout if cart is empty\r\n//     }\r\n//     console.log(\"Checkout clicked\");\r\n//     // Prepare selected items\r\n//     const selectedItems = {\r\n//       items: cartItems.map((item) => ({\r\n//         id: item.id, // Keep the id the same\r\n//         quantity: item.quantity, // Keep the quantity as is\r\n//       })),\r\n//     };\r\n//     try {\r\n//       const response = await fetch(\"http://localhost:5000/get-all-products\");\r\n//       const allProducts = await response.json();\r\n//       const result = allProducts.map((product) => ({\r\n//         _id: product._id,\r\n//         name: product.name,\r\n//         price: product.price,\r\n//       }));\r\n\r\n//       const storeInventory = new Map(\r\n//         result.map((item) => [\r\n//           item._id,\r\n//           { priceInCents: item.price, name: item.name },\r\n//         ])\r\n//       );\r\n\r\n//       let totalPriceInCents = 0;\r\n\r\n//       // Iterate through selected items\r\n//       for (let i = 0; i < selectedItems.items.length; i++) {\r\n//         const { id, quantity } = selectedItems.items[i];\r\n//         const product = storeInventory.get(id);\r\n\r\n//         if (product) {\r\n//           totalPriceInCents += product.priceInCents * quantity;\r\n//         } else {\r\n//           console.warn(`Product with ID ${id} not found in store inventory.`);\r\n//         }\r\n//       }\r\n\r\n//       console.log(`Total Price: ${totalPriceInCents} cents`);\r\n\r\n//       if (totalPriceInCents >= 150) {\r\n//         const finalCheckoutResult = await fetch(\r\n//           \"http://localhost:5000/stripe-payout-session\",\r\n//           {\r\n//             method: \"POST\",\r\n//             headers: {\r\n//               \"Content-Type\": \"application/json\",\r\n//             },\r\n//             body: JSON.stringify({\r\n//               selectedItems,\r\n//               storeInventory: Array.from(storeInventory),\r\n//             }),\r\n//           }\r\n//         )\r\n//           .then((res) => {\r\n//             if (res.ok) return res.json();\r\n//             return res.json().then((json) => Promise.reject(json));\r\n//           })\r\n//           .then(({ url }) => {\r\n//             console.log(url);\r\n//             window.location = url;\r\n//           })\r\n//           .catch((e) => {\r\n//             console.error(e.error);\r\n//           });\r\n//       } else {\r\n//         console.log(\"Price must be greater than Rs. 150\");\r\n//         alert(\"Total Price must be greater than Rs. 150\");\r\n//       }\r\n//     } catch (e) {\r\n//       console.log(\"Error: \", e);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <Navbar />\r\n//       {/* Main Container */}\r\n//       <div\r\n//         className={`min-h-screen relative transition-colors duration-300 ${\r\n//           darkMode ? \"bg-gray-900\" : \"bg-green-50\"\r\n//         }`}\r\n//       >\r\n//         <div className=\"container mx-auto py-8 px-4 relative\">\r\n//           {/* Top Right Controls: Dark Mode Toggle and Cart Icon */}\r\n//           <div className=\"absolute top-4 right-4 flex space-x-4\">\r\n//             {/* Dark Mode Toggle Button */}\r\n//             <button\r\n//               onClick={toggleDarkMode}\r\n//               className=\"flex items-center justify-center w-10 h-10 bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-gray-200 rounded-full focus:outline-none focus:ring-2 focus:ring-green-400\"\r\n//               aria-label=\"Toggle Dark Mode\"\r\n//             >\r\n//               {darkMode ? <FaSun /> : <FaMoon />}\r\n//             </button>\r\n\r\n//             {/* Cart Icon */}\r\n//             <button\r\n//               onClick={handleCartClick} // Open the cart panel\r\n//               className=\"relative text-gray-700 dark:text-gray-200 hover:text-green-700 dark:hover:text-green-400 focus:outline-none\"\r\n//               aria-label=\"Open cart\"\r\n//             >\r\n//               <FaShoppingCart size={24} />\r\n//               {cartCount > 0 && (\r\n//                 <span className=\"absolute top-0 right-0 block h-2 w-2 rounded-full bg-red-600\"></span>\r\n//               )}\r\n//             </button>\r\n//           </div>\r\n\r\n//           <h2 className=\"text-3xl font-bold text-green-700 dark:text-green-300 text-center mb-8\">\r\n//             Explore Our Products\r\n//           </h2>\r\n//           {error && (\r\n//             <div className=\"text-red-500 dark:text-red-400 text-center mb-4\">\r\n//               {error}\r\n//             </div>\r\n//           )}\r\n\r\n//           {/* Background and Cards */}\r\n//           <div className=\"relative\">\r\n//             {expandedCard !== null && (\r\n//               <div\r\n//                 className=\"fixed inset-0 bg-gray-800 bg-opacity-40 z-10\"\r\n//                 onClick={() => setExpandedCard(null)}\r\n//               ></div>\r\n//             )}\r\n\r\n//             <div\r\n//               className={`grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6 ${\r\n//                 expandedCard !== null ? \"relative\" : \"\"\r\n//               }`}\r\n//             >\r\n//               {products.map((product, index) => {\r\n//                 // Determine if the card should be blurred\r\n//                 const isBlurred =\r\n//                   expandedCard !== null && expandedCard !== index;\r\n\r\n//                 return (\r\n//                   <div\r\n//                     key={product._id}\r\n//                     className={`relative bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg shadow-sm transition-transform transform ${\r\n//                       expandedCard === index\r\n//                         ? \"scale-105 shadow-2xl z-20 cursor-pointer\"\r\n//                         : \"hover:shadow-xl cursor-pointer\"\r\n//                     } ${isBlurred ? \"blur-sm pointer-events-none\" : \"\"}`}\r\n//                     onClick={() => toggleExpandCard(index)} // Toggle card expansion\r\n//                   >\r\n//                     <img\r\n//                       src={product.img}\r\n//                       alt={product.name}\r\n//                       className=\"w-full h-48 object-cover rounded-t-md\"\r\n//                     />\r\n//                     <div className=\"p-4\">\r\n//                       <h3 className=\"text-xl font-semibold text-gray-800 dark:text-gray-200\">\r\n//                         {product.name}\r\n//                       </h3>\r\n//                       <p className=\"text-gray-600 dark:text-gray-400 text-sm mb-2\">\r\n//                         Category: {product.category}\r\n//                       </p>\r\n//                       <p className=\"text-gray-600 dark:text-gray-400 mb-4\">\r\n//                         Price: Rs.{product.price}\r\n//                       </p>\r\n\r\n//                       {/* Conditionally render additional details */}\r\n//                       {expandedCard === index && (\r\n//                         <div className=\"mt-4 text-gray-700 dark:text-gray-300 relative\">\r\n//                           {/* Success Message */}\r\n//                           {successMessage && (\r\n//                             <div className=\"mb-2 bg-green-100 dark:bg-green-700 border border-green-400 dark:border-green-600 text-green-700 dark:text-green-100 px-4 py-2 rounded-md shadow-lg flex items-center transition-opacity duration-500\">\r\n//                               <span className=\"mr-2\">{successMessage}</span>\r\n//                               <svg\r\n//                                 className=\"w-4 h-4 fill-current text-green-700 dark:text-green-100 cursor-pointer\"\r\n//                                 xmlns=\"http://www.w3.org/2000/svg\"\r\n//                                 viewBox=\"0 0 20 20\"\r\n//                                 onClick={() => setSuccessMessage(null)} // Allow manual dismissal\r\n//                               >\r\n//                                 <path\r\n//                                   fillRule=\"evenodd\"\r\n//                                   d=\"M10 8.586L15.95 2.636a1 1 0 011.414 1.414L11.414 10l5.95 5.95a1 1 0 01-1.414 1.414L10 11.414l-5.95 5.95a1 1 0 01-1.414-1.414L8.586 10 2.636 4.05a1 1 0 011.414-1.414L10 8.586z\"\r\n//                                   clipRule=\"evenodd\"\r\n//                                 />\r\n//                               </svg>\r\n//                             </div>\r\n//                           )}\r\n\r\n//                           <p className=\"text-sm mb-2\">\r\n//                             <strong>Stock:</strong> {product.stock}\r\n//                           </p>\r\n//                           <p className=\"text-sm mb-2\">\r\n//                             <strong>Description:</strong> {product.description}\r\n//                           </p>\r\n//                           <button\r\n//                             onClick={(e) => {\r\n//                               e.stopPropagation(); // Prevent card toggle on button click\r\n//                               addToCart(\r\n//                                 product._id,\r\n//                                 product.name,\r\n//                                 product.price\r\n//                               ); // Pass product details\r\n//                             }}\r\n//                             className=\"w-full py-2 bg-green-600 dark:bg-green-500 text-white font-medium rounded-md shadow hover:bg-green-700 dark:hover:bg-green-600 transition focus:outline-none\"\r\n//                           >\r\n//                             Add to Cart\r\n//                           </button>\r\n//                         </div>\r\n//                       )}\r\n//                     </div>\r\n//                   </div>\r\n//                 );\r\n//               })}\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n\r\n//         {/* Side Panel for Cart */}\r\n//         {isCartOpen && (\r\n//           <>\r\n//             {/* Overlay */}\r\n//             <div\r\n//               className=\"fixed inset-0 bg-black bg-opacity-50 z-30\"\r\n//               onClick={() => setIsCartOpen(false)}\r\n//             ></div>\r\n\r\n//             {/* Side Panel */}\r\n//             <div className=\"fixed top-0 right-0 w-80 bg-white dark:bg-gray-800 h-full shadow-lg z-40 transform transition-transform duration-300\">\r\n//               <div className=\"flex justify-between items-center p-4 border-b dark:border-gray-700\">\r\n//                 <h2 className=\"text-xl font-semibold text-gray-800 dark:text-gray-200\">\r\n//                   Your Cart\r\n//                 </h2>\r\n//                 <button\r\n//                   onClick={() => setIsCartOpen(false)}\r\n//                   aria-label=\"Close cart\"\r\n//                 >\r\n//                   <svg\r\n//                     className=\"w-6 h-6 text-gray-700 dark:text-gray-300\"\r\n//                     xmlns=\"http://www.w3.org/2000/svg\"\r\n//                     fill=\"none\"\r\n//                     viewBox=\"0 0 24 24\"\r\n//                     stroke=\"currentColor\"\r\n//                   >\r\n//                     <path\r\n//                       strokeLinecap=\"round\"\r\n//                       strokeLinejoin=\"round\"\r\n//                       strokeWidth={2}\r\n//                       d=\"M6 18L18 6M6 6l12 12\"\r\n//                     />\r\n//                   </svg>\r\n//                 </button>\r\n//               </div>\r\n\r\n//               <div className=\"p-4 overflow-y-auto h-[calc(100%-4rem)]\">\r\n//                 {cartItems.length === 0 ? (\r\n//                   <p className=\"text-gray-600 dark:text-gray-400\">\r\n//                     Your cart is empty.\r\n//                   </p>\r\n//                 ) : (\r\n//                   cartItems.map((item) => (\r\n//                     <div\r\n//                       key={item.id}\r\n//                       className=\"flex justify-between items-center mb-4 border-b dark:border-gray-700 pb-2\"\r\n//                     >\r\n//                       <div>\r\n//                         <h3 className=\"font-medium text-gray-800 dark:text-gray-200\">\r\n//                           {item.name}\r\n//                         </h3>\r\n//                         <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n//                           Quantity: {item.quantity}\r\n//                         </p>\r\n//                       </div>\r\n//                       <div className=\"flex items-center space-x-2\">\r\n//                         <button\r\n//                           onClick={() =>\r\n//                             setCartItems((prevItems) =>\r\n//                               prevItems.map((cartItem) =>\r\n//                                 cartItem.id === item.id\r\n//                                   ? {\r\n//                                       ...cartItem,\r\n//                                       quantity: cartItem.quantity + 1,\r\n//                                     }\r\n//                                   : cartItem\r\n//                               )\r\n//                             )\r\n//                           }\r\n//                           className=\"flex items-center justify-center w-8 h-8 bg-green-300 dark:bg-green-600 text-white rounded-full hover:bg-green-700 dark:hover:bg-green-700 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-green-400\"\r\n//                           aria-label=\"Increase quantity\"\r\n//                         >\r\n//                           <FaPlus />\r\n//                         </button>\r\n\r\n//                         <button\r\n//                           onClick={() =>\r\n//                             setCartItems((prevItems) =>\r\n//                               prevItems\r\n//                                 .map((cartItem) =>\r\n//                                   cartItem.id === item.id\r\n//                                     ? {\r\n//                                         ...cartItem,\r\n//                                         quantity: cartItem.quantity - 1,\r\n//                                       }\r\n//                                     : cartItem\r\n//                                 )\r\n//                                 .filter((cartItem) => cartItem.quantity > 0)\r\n//                             )\r\n//                           }\r\n//                           className=\"flex items-center justify-center w-8 h-8 bg-red-300 dark:bg-red-600 text-white rounded-full hover:bg-red-700 dark:hover:bg-red-700 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-red-400\"\r\n//                           aria-label=\"Decrease quantity\"\r\n//                         >\r\n//                           <FaMinus />\r\n//                         </button>\r\n//                         <button\r\n//                           onClick={() =>\r\n//                             setCartItems((prevItems) =>\r\n//                               prevItems.filter(\r\n//                                 (cartItem) => cartItem.id !== item.id\r\n//                               )\r\n//                             )\r\n//                           }\r\n//                           className=\"px-2 py-1 bg-gray-300 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded\"\r\n//                           aria-label=\"Remove item\"\r\n//                         >\r\n//                           Remove\r\n//                         </button>\r\n//                       </div>\r\n//                     </div>\r\n//                   ))\r\n//                 )}\r\n//                 {cartItems.length > 0 && (\r\n//                   <div className=\"mt-4 border-t dark:border-gray-700 pt-2\">\r\n//                     <h3 className=\"text-lg font-semibold text-gray-800 dark:text-gray-200\">\r\n//                       Total Price: Rs.{totalPrice}\r\n//                     </h3>\r\n//                   </div>\r\n//                 )}\r\n\r\n//                 {cartItems.length > 0 && (\r\n//                   <button\r\n//                     className=\"w-full py-2 bg-blue-600 dark:bg-blue-500 text-white font-semibold rounded-md shadow hover:bg-blue-700 dark:hover:bg-blue-600 transition-colors duration-200\"\r\n//                     onClick={handleCheckout}\r\n//                   >\r\n//                     Checkout\r\n//                   </button>\r\n//                 )}\r\n//               </div>\r\n//             </div>\r\n//           </>\r\n//         )}\r\n//       </div>\r\n//       <Footer />\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default UserPanel;\r\n\r\n//----smooth cart functionality--------------\r\n// src/UserPanel.js\r\nimport React, { useEffect, useState, useContext } from \"react\";\r\nimport Navbar from \"./Navbar\";\r\nimport { FaShoppingCart, FaSun, FaMoon } from \"react-icons/fa\"; // Importing sun and moon icons\r\nimport { FaPlus, FaMinus } from \"react-icons/fa\";\r\nimport backgroundImage from \"./img/background.png\";\r\nimport Footer from \"./Footer\";\r\nimport { ThemeContext } from \".././ThemeContext\"; // Import ThemeContext\r\n\r\nconst UserPanel = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [expandedCard, setExpandedCard] = useState(null); // Track which card is expanded\r\n  const [cartItems, setCartItems] = useState([]); // Track items in the cart\r\n  const [isCartOpen, setIsCartOpen] = useState(false); // Track cart panel visibility\r\n  const [successMessage, setSuccessMessage] = useState(null); // Track success messages\r\n  const { darkMode, toggleDarkMode } = useContext(ThemeContext); // Use ThemeContext\r\n\r\n  // Calculate total price of the cart\r\n  const totalPrice = cartItems.reduce(\r\n    (total, item) => total + item.quantity * item.price,\r\n    0\r\n  );\r\n\r\n  // Calculate total cart count\r\n  const cartCount = cartItems.reduce((total, item) => total + item.quantity, 0);\r\n\r\n  // Fetch products from the API\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/api/products\");\r\n        const data = await response.json();\r\n        if (response.ok) {\r\n          setProducts(data);\r\n        } else {\r\n          setError(data.message || \"Error fetching products\");\r\n        }\r\n      } catch (err) {\r\n        setError(\"An error occurred while fetching products\");\r\n      }\r\n    };\r\n\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  // Handle adding products to the cart\r\n  const addToCart = (productId, productName, productPrice) => {\r\n    setCartItems((prevItems) => {\r\n      const existingItem = prevItems.find((item) => item.id === productId);\r\n      if (existingItem) {\r\n        // If item exists, increase quantity\r\n        return prevItems.map((item) =>\r\n          item.id === productId\r\n            ? { ...item, quantity: item.quantity + 1 }\r\n            : item\r\n        );\r\n      } else {\r\n        // If item doesn't exist, add new item with quantity 1\r\n        return [\r\n          ...prevItems,\r\n          {\r\n            id: productId,\r\n            name: productName,\r\n            price: productPrice,\r\n            quantity: 1,\r\n          },\r\n        ];\r\n      }\r\n    });\r\n    setSuccessMessage(`âœ… ${productName} has been added to your cart!`); // Set success message\r\n  };\r\n\r\n  // Toggle card expansion\r\n  const toggleExpandCard = (index) => {\r\n    setExpandedCard((prev) => (prev === index ? null : index)); // Toggle expanded card\r\n    setSuccessMessage(null); // Clear any existing success messages when toggling cards\r\n  };\r\n\r\n  // Handle cart icon click to open the cart panel\r\n  const handleCartClick = () => {\r\n    setIsCartOpen(true); // Open the cart panel\r\n  };\r\n\r\n  // Handle cart close (clicking on overlay or close button)\r\n  const handleCartClose = () => {\r\n    setIsCartOpen(false); // Close the cart panel\r\n  };\r\n\r\n  // Effect to auto-dismiss success messages after 3 seconds\r\n  useEffect(() => {\r\n    if (successMessage) {\r\n      const timer = setTimeout(() => {\r\n        setSuccessMessage(null); // Clear the success message\r\n      }, 3000); // 3 seconds\r\n\r\n      // Cleanup the timer if the component unmounts or successMessage changes\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [successMessage]);\r\n\r\n  const handleCheckout = async () => {\r\n    if (cartItems.length === 0) {\r\n      console.log(\"Cart is empty\");\r\n      return; // Prevent proceeding with checkout if cart is empty\r\n    }\r\n    console.log(\"Checkout clicked\");\r\n    // Prepare selected items\r\n    const selectedItems = {\r\n      items: cartItems.map((item) => ({\r\n        id: item.id, // Keep the id the same\r\n        quantity: item.quantity, // Keep the quantity as is\r\n      })),\r\n    };\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/get-all-products\");\r\n      const allProducts = await response.json();\r\n      const result = allProducts.map((product) => ({\r\n        _id: product._id,\r\n        name: product.name,\r\n        price: product.price,\r\n      }));\r\n\r\n      const storeInventory = new Map(\r\n        result.map((item) => [\r\n          item._id,\r\n          { priceInCents: item.price, name: item.name },\r\n        ])\r\n      );\r\n\r\n      let totalPriceInCents = 0;\r\n\r\n      // Iterate through selected items\r\n      for (let i = 0; i < selectedItems.items.length; i++) {\r\n        const { id, quantity } = selectedItems.items[i];\r\n        const product = storeInventory.get(id);\r\n\r\n        if (product) {\r\n          totalPriceInCents += product.priceInCents * quantity;\r\n        } else {\r\n          console.warn(`Product with ID ${id} not found in store inventory.`);\r\n        }\r\n      }\r\n\r\n      console.log(`Total Price: ${totalPriceInCents} cents`);\r\n\r\n      if (totalPriceInCents >= 150) {\r\n        const finalCheckoutResult = await fetch(\r\n          \"http://localhost:5000/stripe-payout-session\",\r\n          {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n              selectedItems,\r\n              storeInventory: Array.from(storeInventory),\r\n            }),\r\n          }\r\n        )\r\n          .then((res) => {\r\n            if (res.ok) return res.json();\r\n            return res.json().then((json) => Promise.reject(json));\r\n          })\r\n          .then(({ url }) => {\r\n            console.log(url);\r\n            window.location = url;\r\n          })\r\n          .catch((e) => {\r\n            console.error(e.error);\r\n          });\r\n      } else {\r\n        console.log(\"Price must be greater than Rs. 150\");\r\n        alert(\"Total Price must be greater than Rs. 150\");\r\n      }\r\n    } catch (e) {\r\n      console.log(\"Error: \", e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      {/* Main Container */}\r\n      <div\r\n        className={`min-h-screen relative transition-colors duration-300 ${\r\n          darkMode ? \"bg-gray-900\" : \"bg-green-50\"\r\n        }`}\r\n      >\r\n        <div className=\"container mx-auto py-8 px-4 relative\">\r\n          {/* Top Right Controls: Dark Mode Toggle and Cart Icon */}\r\n          <div className=\"absolute top-4 right-4 flex space-x-4\">\r\n            {/* Dark Mode Toggle Button */}\r\n            <button\r\n              onClick={toggleDarkMode}\r\n              className=\"flex items-center justify-center w-10 h-10 bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-gray-200 rounded-full focus:outline-none focus:ring-2 focus:ring-green-400\"\r\n              aria-label=\"Toggle Dark Mode\"\r\n            >\r\n              {darkMode ? <FaSun /> : <FaMoon />}\r\n            </button>\r\n\r\n            {/* Cart Icon */}\r\n            <button\r\n              onClick={handleCartClick} // Open the cart panel\r\n              className=\"relative text-gray-700 dark:text-gray-200 hover:text-green-700 dark:hover:text-green-400 focus:outline-none\"\r\n              aria-label=\"Open cart\"\r\n            >\r\n              <FaShoppingCart size={24} />\r\n              {cartCount > 0 && (\r\n                <span className=\"absolute top-0 right-0 block h-2 w-2 rounded-full bg-red-600\"></span>\r\n              )}\r\n            </button>\r\n          </div>\r\n\r\n          <h2 className=\"text-3xl font-bold text-green-700 dark:text-green-300 text-center mb-8\">\r\n            Explore Our Products\r\n          </h2>\r\n          {error && (\r\n            <div className=\"text-red-500 dark:text-red-400 text-center mb-4\">\r\n              {error}\r\n            </div>\r\n          )}\r\n\r\n          {/* Background and Cards */}\r\n          <div className=\"relative\">\r\n            {expandedCard !== null && (\r\n              <div\r\n                className=\"fixed inset-0 bg-gray-800 bg-opacity-40 z-10\"\r\n                onClick={() => setExpandedCard(null)}\r\n              ></div>\r\n            )}\r\n\r\n            <div\r\n              className={`grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6 ${\r\n                expandedCard !== null ? \"relative\" : \"\"\r\n              }`}\r\n            >\r\n              {products.map((product, index) => {\r\n                // Determine if the card should be blurred\r\n                const isBlurred =\r\n                  expandedCard !== null && expandedCard !== index;\r\n\r\n                return (\r\n                  <div\r\n                    key={product._id}\r\n                    className={`relative bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg shadow-sm transition-transform transform ${\r\n                      expandedCard === index\r\n                        ? \"scale-105 shadow-2xl z-20 cursor-pointer\"\r\n                        : \"hover:shadow-xl cursor-pointer\"\r\n                    } ${isBlurred ? \"blur-sm pointer-events-none\" : \"\"}`}\r\n                    onClick={() => toggleExpandCard(index)} // Toggle card expansion\r\n                  >\r\n                    <img\r\n                      src={product.img}\r\n                      alt={product.name}\r\n                      className=\"w-full h-48 object-cover rounded-t-md\"\r\n                    />\r\n                    <div className=\"p-4\">\r\n                      <h3 className=\"text-xl font-semibold text-gray-800 dark:text-gray-200\">\r\n                        {product.name}\r\n                      </h3>\r\n                      <p className=\"text-gray-600 dark:text-gray-400 text-sm mb-2\">\r\n                        Category: {product.category}\r\n                      </p>\r\n                      <p className=\"text-gray-600 dark:text-gray-400 mb-4\">\r\n                        Price: Rs.{product.price}\r\n                      </p>\r\n\r\n                      {/* Conditionally render additional details */}\r\n                      {expandedCard === index && (\r\n                        <div className=\"mt-4 text-gray-700 dark:text-gray-300 relative\">\r\n                          {/* Success Message */}\r\n                          {successMessage && (\r\n                            <div className=\"mb-2 bg-green-100 dark:bg-green-700 border border-green-400 dark:border-green-600 text-green-700 dark:text-green-100 px-4 py-2 rounded-md shadow-lg flex items-center transition-opacity duration-500\">\r\n                              <span className=\"mr-2\">{successMessage}</span>\r\n                              <svg\r\n                                className=\"w-4 h-4 fill-current text-green-700 dark:text-green-100 cursor-pointer\"\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                viewBox=\"0 0 20 20\"\r\n                                onClick={() => setSuccessMessage(null)} // Allow manual dismissal\r\n                              >\r\n                                <path\r\n                                  fillRule=\"evenodd\"\r\n                                  d=\"M10 8.586L15.95 2.636a1 1 0 011.414 1.414L11.414 10l5.95 5.95a1 1 0 01-1.414 1.414L10 11.414l-5.95 5.95a1 1 0 01-1.414-1.414L8.586 10 2.636 4.05a1 1 0 011.414-1.414L10 8.586z\"\r\n                                  clipRule=\"evenodd\"\r\n                                />\r\n                              </svg>\r\n                            </div>\r\n                          )}\r\n\r\n                          <p className=\"text-sm mb-2\">\r\n                            <strong>Stock:</strong> {product.stock}\r\n                          </p>\r\n                          <p className=\"text-sm mb-2\">\r\n                            <strong>Description:</strong> {product.description}\r\n                          </p>\r\n                          <button\r\n                            onClick={(e) => {\r\n                              e.stopPropagation(); // Prevent card toggle on button click\r\n                              addToCart(\r\n                                product._id,\r\n                                product.name,\r\n                                product.price\r\n                              ); // Pass product details\r\n                            }}\r\n                            className=\"w-full py-2 bg-green-600 dark:bg-green-500 text-white font-medium rounded-md shadow hover:bg-green-700 dark:hover:bg-green-600 transition focus:outline-none\"\r\n                          >\r\n                            Add to Cart\r\n                          </button>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Side Panel for Cart with Animation */}\r\n        {/* Always render the overlay and cart panel */}\r\n        <div\r\n          className={`fixed inset-0 z-30 transition-opacity duration-300 ${\r\n            isCartOpen\r\n              ? \"opacity-50 pointer-events-auto\"\r\n              : \"opacity-0 pointer-events-none\"\r\n          } bg-black bg-opacity-50`}\r\n          onClick={handleCartClose}\r\n          aria-hidden={isCartOpen ? \"false\" : \"true\"}\r\n        ></div>\r\n\r\n        <div\r\n          className={`fixed top-0 right-0 w-80 bg-white dark:bg-gray-800 h-full shadow-lg z-40 transform transition-transform duration-300 ${\r\n            isCartOpen ? \"translate-x-0\" : \"translate-x-full\"\r\n          }`}\r\n          aria-hidden={!isCartOpen ? \"true\" : \"false\"}\r\n        >\r\n          <div className=\"flex justify-between items-center p-4 border-b dark:border-gray-700\">\r\n            <h2 className=\"text-xl font-semibold text-gray-800 dark:text-gray-200\">\r\n              Your Cart\r\n            </h2>\r\n            <button onClick={handleCartClose} aria-label=\"Close cart\">\r\n              <svg\r\n                className=\"w-6 h-6 text-gray-700 dark:text-gray-300\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 24 24\"\r\n                stroke=\"currentColor\"\r\n              >\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth={2}\r\n                  d=\"M6 18L18 6M6 6l12 12\"\r\n                />\r\n              </svg>\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"p-4 overflow-y-auto h-[calc(100%-4rem)]\">\r\n            {cartItems.length === 0 ? (\r\n              <p className=\"text-gray-600 dark:text-gray-400\">\r\n                Your cart is empty.\r\n              </p>\r\n            ) : (\r\n              cartItems.map((item) => (\r\n                <div\r\n                  key={item.id}\r\n                  className=\"flex justify-between items-center mb-4 border-b dark:border-gray-700 pb-2\"\r\n                >\r\n                  <div>\r\n                    <h3 className=\"font-medium text-gray-800 dark:text-gray-200\">\r\n                      {item.name}\r\n                    </h3>\r\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                      Quantity: {item.quantity}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <button\r\n                      onClick={() =>\r\n                        setCartItems((prevItems) =>\r\n                          prevItems.map((cartItem) =>\r\n                            cartItem.id === item.id\r\n                              ? {\r\n                                  ...cartItem,\r\n                                  quantity: cartItem.quantity + 1,\r\n                                }\r\n                              : cartItem\r\n                          )\r\n                        )\r\n                      }\r\n                      className=\"flex items-center justify-center w-8 h-8 bg-green-300 dark:bg-green-600 text-white rounded-full hover:bg-green-700 dark:hover:bg-green-700 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-green-400\"\r\n                      aria-label=\"Increase quantity\"\r\n                    >\r\n                      <FaPlus />\r\n                    </button>\r\n\r\n                    <button\r\n                      onClick={() =>\r\n                        setCartItems((prevItems) =>\r\n                          prevItems\r\n                            .map((cartItem) =>\r\n                              cartItem.id === item.id\r\n                                ? {\r\n                                    ...cartItem,\r\n                                    quantity: cartItem.quantity - 1,\r\n                                  }\r\n                                : cartItem\r\n                            )\r\n                            .filter((cartItem) => cartItem.quantity > 0)\r\n                        )\r\n                      }\r\n                      className=\"flex items-center justify-center w-8 h-8 bg-red-300 dark:bg-red-600 text-white rounded-full hover:bg-red-700 dark:hover:bg-red-700 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-red-400\"\r\n                      aria-label=\"Decrease quantity\"\r\n                    >\r\n                      <FaMinus />\r\n                    </button>\r\n                    <button\r\n                      onClick={() =>\r\n                        setCartItems((prevItems) =>\r\n                          prevItems.filter(\r\n                            (cartItem) => cartItem.id !== item.id\r\n                          )\r\n                        )\r\n                      }\r\n                      className=\"px-2 py-1 bg-gray-300 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded\"\r\n                      aria-label=\"Remove item\"\r\n                    >\r\n                      Remove\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            )}\r\n            {cartItems.length > 0 && (\r\n              <div className=\"mt-4 border-t dark:border-gray-700 pt-2\">\r\n                <h3 className=\"text-lg font-semibold text-gray-800 dark:text-gray-200\">\r\n                  Total Price: Rs.{totalPrice}\r\n                </h3>\r\n              </div>\r\n            )}\r\n\r\n            {cartItems.length > 0 && (\r\n              <button\r\n                className=\"w-full py-2 bg-blue-600 dark:bg-blue-500 text-white font-semibold rounded-md shadow hover:bg-blue-700 dark:hover:bg-blue-600 transition-colors duration-200\"\r\n                onClick={handleCheckout}\r\n              >\r\n                Checkout\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserPanel;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAC9D,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,cAAc,EAAEC,KAAK,EAAEC,MAAM,QAAQ,gBAAgB,CAAC,CAAC;AAChE,SAASC,MAAM,EAAEC,OAAO,QAAQ,gBAAgB;AAChD,OAAOC,eAAe,MAAM,sBAAsB;AAClD,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,YAAY,QAAQ,mBAAmB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACmB,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACqB,YAAY,EAAEC,eAAe,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC,CAAC,C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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _objectSpread from\"C:/Users/Abdullah Usama/Desktop/we_project/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// import React, { useEffect, useState } from \"react\";\n// import Navbar from \"./Navbar\";\n// import { FaShoppingCart } from \"react-icons/fa\"; // Importing the cart icon\n// import { useNavigate } from \"react-router-dom\"; // Importing navigation hook\n// const UserPanel = () => {\n//   const [products, setProducts] = useState([]);\n//   const [error, setError] = useState(null);\n//   const [expandedCard, setExpandedCard] = useState(null); // Track which card is expanded\n//   const [cartCount, setCartCount] = useState(0); // Track the number of items in the cart\n//   const [successMessage, setSuccessMessage] = useState(null); // Track success messages\n//   const navigate = useNavigate(); // Initialize navigation\n//   // Fetch products from the API\n//   useEffect(() => {\n//     const fetchProducts = async () => {\n//       try {\n//         const response = await fetch(\"http://localhost:5000/api/products\");\n//         const data = await response.json();\n//         if (response.ok) {\n//           setProducts(data);\n//         } else {\n//           setError(data.message || \"Error fetching products\");\n//         }\n//       } catch (err) {\n//         setError(\"An error occurred while fetching products\");\n//       }\n//     };\n//     fetchProducts();\n//   }, []);\n//   // Handle adding products to the cart\n//   const addToCart = (productId, productName) => {\n//     setCartCount((prevCount) => prevCount + 1); // Increment cart count\n//     setSuccessMessage(`âœ… ${productName} has been added to your cart!`); // Set success message\n//     // Add functionality to send the product to the backend/cart here\n//   };\n//   // Toggle card expansion\n//   const toggleExpandCard = (index) => {\n//     setExpandedCard((prev) => (prev === index ? null : index)); // Toggle expanded card\n//     setSuccessMessage(null); // Clear any existing success messages when toggling cards\n//   };\n//   // Handle cart icon click\n//   const handleCartClick = () => {\n//     navigate(\"/cart\"); // Redirect to the cart page\n//   };\n//   // Effect to auto-dismiss success messages after 3 seconds\n//   useEffect(() => {\n//     if (successMessage) {\n//       const timer = setTimeout(() => {\n//         setSuccessMessage(null); // Clear the success message\n//       }, 3000); // 3 seconds\n//       // Cleanup the timer if the component unmounts or successMessage changes\n//       return () => clearTimeout(timer);\n//     }\n//   }, [successMessage]);\n//   return (\n//     <>\n//       <Navbar />\n//       <div className=\"bg-gray-50 min-h-screen relative\">\n//         <div className=\"container mx-auto py-8 px-4 relative\">\n//           {/* Cart Icon */}\n//           <div className=\"absolute top-4 right-4\">\n//             <button\n//               onClick={handleCartClick}\n//               className=\"relative text-gray-700 hover:text-green-700 focus:outline-none\"\n//               aria-label=\"Go to cart\"\n//             >\n//               <FaShoppingCart size={24} />\n//               {cartCount > 0 && (\n//                 <span className=\"absolute top-0 right-0 block h-2 w-2 rounded-full bg-red-600\"></span>\n//               )}\n//             </button>\n//           </div>\n//           <h2 className=\"text-3xl font-bold text-green-700 text-center mb-8\">\n//             Explore Our Products\n//           </h2>\n//           {error && (\n//             <div className=\"text-red-500 text-center mb-4\">{error}</div>\n//           )}\n//           {/* Background and Cards */}\n//           <div className=\"relative\">\n//             {expandedCard !== null && (\n//               <div\n//                 className=\"fixed inset-0 bg-gray-800 bg-opacity-40 z-10\"\n//                 onClick={() => setExpandedCard(null)}\n//               ></div>\n//             )}\n//             <div\n//               className={`grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6 ${\n//                 expandedCard !== null ? \"relative\" : \"\"\n//               }`}\n//             >\n//               {products.map((product, index) => {\n//                 // Determine if the card should be blurred\n//                 const isBlurred =\n//                   expandedCard !== null && expandedCard !== index;\n//                 return (\n//                   <div\n//                     key={product._id}\n//                     className={`relative bg-white border border-gray-200 rounded-lg shadow-sm transition-transform transform ${\n//                       expandedCard === index\n//                         ? \"scale-105 shadow-2xl z-20 cursor-pointer\"\n//                         : \"hover:shadow-md cursor-pointer\"\n//                     } ${isBlurred ? \"blur-sm pointer-events-none\" : \"\"}`}\n//                     onClick={() => toggleExpandCard(index)} // Toggle card expansion\n//                   >\n//                     <img\n//                       src={product.img}\n//                       alt={product.name}\n//                       className=\"w-full h-48 object-cover rounded-t-md\"\n//                     />\n//                     <div className=\"p-4\">\n//                       <h3 className=\"text-xl font-semibold text-gray-800\">\n//                         {product.name}\n//                       </h3>\n//                       <p className=\"text-gray-600 text-sm mb-2\">\n//                         Category: {product.category}\n//                       </p>\n//                       <p className=\"text-gray-600 mb-4\">\n//                         Price: Rs.{product.price}\n//                       </p>\n//                       {/* Conditionally render additional details */}\n//                       {expandedCard === index && (\n//                         <div className=\"mt-4 text-gray-700 relative\">\n//                           {/* Success Message */}\n//                           {successMessage && (\n//                             <div className=\"mb-2 bg-green-100 border border-green-400 text-green-700 px-4 py-2 rounded-md shadow-lg flex items-center transition-opacity duration-500\">\n//                               <span className=\"mr-2\">{successMessage}</span>\n//                               <svg\n//                                 className=\"w-4 h-4 fill-current text-green-700 cursor-pointer\"\n//                                 xmlns=\"http://www.w3.org/2000/svg\"\n//                                 viewBox=\"0 0 20 20\"\n//                                 onClick={() => setSuccessMessage(null)} // Allow manual dismissal\n//                               >\n//                                 <path\n//                                   fillRule=\"evenodd\"\n//                                   d=\"M10 8.586L15.95 2.636a1 1 0 011.414 1.414L11.414 10l5.95 5.95a1 1 0 01-1.414 1.414L10 11.414l-5.95 5.95a1 1 0 01-1.414-1.414L8.586 10 2.636 4.05a1 1 0 011.414-1.414L10 8.586z\"\n//                                   clipRule=\"evenodd\"\n//                                 />\n//                               </svg>\n//                             </div>\n//                           )}\n//                           <p className=\"text-sm mb-2\">\n//                             <strong>Stock:</strong> {product.stock}\n//                           </p>\n//                           <p className=\"text-sm mb-2\">\n//                             <strong>Description:</strong> {product.description}\n//                           </p>\n//                           <button\n//                             onClick={(e) => {\n//                               e.stopPropagation(); // Prevent card toggle on button click\n//                               addToCart(product._id, product.name); // Pass product name\n//                             }}\n//                             className=\"w-full py-2 bg-green-600 text-white font-medium rounded-md shadow hover:bg-green-700 transition focus:outline-none focus:ring-2 focus:ring-green-400\"\n//                           >\n//                             Add to Cart\n//                           </button>\n//                         </div>\n//                       )}\n//                     </div>\n//                   </div>\n//                 );\n//               })}\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     </>\n//   );\n// };\n// export default UserPanel;\n//-----------side panel cart----------------------------\nimport React,{useEffect,useState}from\"react\";import Navbar from\"./Navbar\";import{FaShoppingCart}from\"react-icons/fa\";// Importing the cart icon\nimport{FaPlus,FaMinus}from\"react-icons/fa\";import backgroundImage from\"./img/background.png\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const UserPanel=()=>{const[products,setProducts]=useState([]);const[error,setError]=useState(null);const[expandedCard,setExpandedCard]=useState(null);// Track which card is expanded\nconst[cartItems,setCartItems]=useState([]);// Track items in the cart\nconst[isCartOpen,setIsCartOpen]=useState(false);// Track cart panel visibility\nconst[successMessage,setSuccessMessage]=useState(null);// Track success messages\n// Calculate total price of the cart\nconst totalPrice=cartItems.reduce((total,item)=>total+item.quantity*item.price,0);// Calculate total cart count\nconst cartCount=cartItems.reduce((total,item)=>total+item.quantity,0);// Fetch products from the API\nuseEffect(()=>{const fetchProducts=async()=>{try{const response=await fetch(\"http://localhost:5000/api/products\");const data=await response.json();if(response.ok){setProducts(data);}else{setError(data.message||\"Error fetching products\");}}catch(err){setError(\"An error occurred while fetching products\");}};fetchProducts();},[]);// Handle adding products to the cart\n// const addToCart = (productId, productName) => {\n//   setCartItems((prevItems) => {\n//     const existingItem = prevItems.find((item) => item.id === productId);\n//     if (existingItem) {\n//       // If item exists, increase quantity\n//       return prevItems.map((item) =>\n//         item.id === productId\n//           ? { ...item, quantity: item.quantity + 1 }\n//           : item\n//       );\n//     } else {\n//       // If item doesn't exist, add new item with quantity 1\n//       return [\n//         ...prevItems,\n//         { id: productId, name: productName, quantity: 1 },\n//       ];\n//     }\n//   });\n//   setSuccessMessage(`âœ…Added`); // Set success message\n// };\nconst addToCart=(productId,productName,productPrice)=>{setCartItems(prevItems=>{const existingItem=prevItems.find(item=>item.id===productId);if(existingItem){// If item exists, increase quantity\nreturn prevItems.map(item=>item.id===productId?_objectSpread(_objectSpread({},item),{},{quantity:item.quantity+1}):item);}else{// If item doesn't exist, add new item with quantity 1\nreturn[...prevItems,{id:productId,name:productName,price:productPrice,quantity:1}];}});setSuccessMessage(\"\\u2705 \".concat(productName,\" has been added to your cart!\"));// Set success message\n};// Toggle card expansion\nconst toggleExpandCard=index=>{setExpandedCard(prev=>prev===index?null:index);// Toggle expanded card\nsetSuccessMessage(null);// Clear any existing success messages when toggling cards\n};// Handle cart icon click to open the cart panel\nconst handleCartClick=()=>{setIsCartOpen(true);// Open the cart panel\n};// Effect to auto-dismiss success messages after 3 seconds\nuseEffect(()=>{if(successMessage){const timer=setTimeout(()=>{setSuccessMessage(null);// Clear the success message\n},3000);// 3 seconds\n// Cleanup the timer if the component unmounts or successMessage changes\nreturn()=>clearTimeout(timer);}},[successMessage]);const handleCheckout=async()=>{if(cartItems.length===0){console.log(\"empty shit\");}console.log(\"checkout clicked\");// console.log(cartItems);\nconst selectedItems={items:cartItems.map(item=>({id:item.id,// Keep the id the same\nquantity:item.quantity// Keep the quantity as is\n}))};// console.log(selectedItems);\ntry{const response=await fetch(\"http://localhost:5000/get-all-products\");const allProducts=await response.json();const result=allProducts.map(product=>({_id:product._id,name:product.name,price:product.price}));const storeInventory=new Map(result.map(item=>[item._id,{priceInCents:item.price,name:item.name}]));// console.log(storeInventory);\n// console.log(selectedItems);\nlet totalPriceInCents=0;// Iterate through selected items\nfor(let i=0;i<selectedItems.items.length;i++){const{id,quantity}=selectedItems.items[i];const product=storeInventory.get(id);if(product){totalPriceInCents+=product.priceInCents*quantity;}else{console.warn(\"Product with ID \".concat(id,\" not found in store inventory.\"));}}console.log(\"Total Price: \".concat(totalPriceInCents,\" cents\"));if(totalPriceInCents>=150){const finalCheckoutResult=await fetch(\"http://localhost:5000/stripe-payout-session\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({selectedItems,storeInventory:Array.from(storeInventory)})}).then(res=>{if(res.ok)return res.json();return res.json().then(json=>Promise.reject(json));}).then(_ref=>{let{url}=_ref;console.log(url);window.location=url;}).catch(e=>{console.error(e.error);});}else{console.log(\"price must be greater than Rs. 150\");alert(\"Total Price must be greater than Rs. 150\");}}catch(e){console.log(\"Error: \",e);}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsxs(\"div\",{className:\" bg-green-50 min-h-screen relative\"// style={{\n//   backgroundImage: `url(${backgroundImage})`, // Use the imported image\n// }}\n,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"container mx-auto py-8 px-4 relative\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"absolute top-4 right-4\",children:/*#__PURE__*/_jsxs(\"button\",{onClick:handleCartClick// Open the cart panel\n,className:\"relative text-gray-700 hover:text-green-700 focus:outline-none\",\"aria-label\":\"Open cart\",children:[/*#__PURE__*/_jsx(FaShoppingCart,{size:24}),cartCount>0&&/*#__PURE__*/_jsx(\"span\",{className:\"absolute top-0 right-0 block h-2 w-2 rounded-full bg-red-600\"})]})}),/*#__PURE__*/_jsx(\"h2\",{className:\"text-3xl font-bold text-green-700 text-center mb-8\",children:\"Explore Our Products\"}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"text-red-500 text-center mb-4\",children:error}),/*#__PURE__*/_jsxs(\"div\",{className:\"relative\",children:[expandedCard!==null&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-gray-800 bg-opacity-40 z-10\",onClick:()=>setExpandedCard(null)}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6 \".concat(expandedCard!==null?\"relative\":\"\"),children:products.map((product,index)=>{// Determine if the card should be blurred\nconst isBlurred=expandedCard!==null&&expandedCard!==index;return/*#__PURE__*/_jsxs(\"div\",{className:\"relative bg-white border border-gray-200 rounded-lg shadow-sm transition-transform transform \".concat(expandedCard===index?\"scale-105 shadow-2xl z-20 cursor-pointer\":\"hover:shadow-xl cursor-pointer\",\" \").concat(isBlurred?\"blur-sm pointer-events-none\":\"\"),onClick:()=>toggleExpandCard(index)// Toggle card expansion\n,children:[/*#__PURE__*/_jsx(\"img\",{src:product.img,alt:product.name,className:\"w-full h-48 object-cover rounded-t-md\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"p-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-semibold text-gray-800\",children:product.name}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-gray-600 text-sm mb-2\",children:[\"Category: \",product.category]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-gray-600 mb-4\",children:[\"Price: Rs.\",product.price]}),expandedCard===index&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4 text-gray-700 relative\",children:[successMessage&&/*#__PURE__*/_jsxs(\"div\",{className:\"mb-2 bg-green-100 border border-green-400 text-green-700 px-4 py-2 rounded-md shadow-lg flex items-center transition-opacity duration-500\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"mr-2\",children:successMessage}),/*#__PURE__*/_jsx(\"svg\",{className:\"w-4 h-4 fill-current text-green-700 cursor-pointer\",xmlns:\"http://www.w3.org/2000/svg\",viewBox:\"0 0 20 20\",onClick:()=>setSuccessMessage(null)// Allow manual dismissal\n,children:/*#__PURE__*/_jsx(\"path\",{fillRule:\"evenodd\",d:\"M10 8.586L15.95 2.636a1 1 0 011.414 1.414L11.414 10l5.95 5.95a1 1 0 01-1.414 1.414L10 11.414l-5.95 5.95a1 1 0 01-1.414-1.414L8.586 10 2.636 4.05a1 1 0 011.414-1.414L10 8.586z\",clipRule:\"evenodd\"})})]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm mb-2\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Stock:\"}),\" \",product.stock]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm mb-2\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Description:\"}),\" \",product.description]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>addToCart(product._id,product.name,product.price),className:\"w-full py-2 bg-green-600 text-white font-medium rounded-md shadow hover:bg-green-700 transition focus:outline-none\",children:\"Add to Cart\"})]})]})]},product._id);})})]})]}),isCartOpen&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black bg-opacity-50 z-30\",onClick:()=>setIsCartOpen(false)}),/*#__PURE__*/_jsxs(\"div\",{className:\"fixed top-0 right-0 w-80 bg-white h-full shadow-lg z-40 transform transition-transform duration-300\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center p-4 border-b\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-semibold\",children:\"Your Cart\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setIsCartOpen(false),\"aria-label\":\"Close cart\",children:/*#__PURE__*/_jsx(\"svg\",{className:\"w-6 h-6 text-gray-700\",xmlns:\"http://www.w3.org/2000/svg\",fill:\"none\",viewBox:\"0 0 24 24\",stroke:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:2,d:\"M6 18L18 6M6 6l12 12\"})})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 overflow-y-auto h-[calc(100%-4rem)]\",children:[cartItems.length===0?/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600\",children:\"Your cart is empty.\"}):cartItems.map(item=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-4 border-b pb-2\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-medium\",children:item.name}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-600\",children:[\"Quantity: \",item.quantity]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setCartItems(prevItems=>prevItems.map(cartItem=>cartItem.id===item.id?_objectSpread(_objectSpread({},cartItem),{},{quantity:cartItem.quantity+1}):cartItem)),className:\"flex items-center justify-center w-8 h-8 bg-green-300 text-white rounded-full hover:bg-green-700 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-green-400\",\"aria-label\":\"Increase quantity\",children:/*#__PURE__*/_jsx(FaPlus,{})}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setCartItems(prevItems=>prevItems.map(cartItem=>cartItem.id===item.id?_objectSpread(_objectSpread({},cartItem),{},{quantity:cartItem.quantity-1}):cartItem).filter(cartItem=>cartItem.quantity>0)),className:\"flex items-center justify-center w-8 h-8 bg-red-300 text-white rounded-full hover:bg-red-700 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-red-400\",\"aria-label\":\"Decrease quantity\",children:/*#__PURE__*/_jsx(FaMinus,{})}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setCartItems(prevItems=>prevItems.filter(cartItem=>cartItem.id!==item.id)),className:\"px-2 py-1 bg-gray-300 text-gray-700 rounded\",\"aria-label\":\"Remove item\",children:\"Remove\"})]})]},item.id)),cartItems.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-4 border-t pt-2\",children:/*#__PURE__*/_jsxs(\"h3\",{className:\"text-lg font-semibold\",children:[\"Total Price: Rs.\",totalPrice]})}),cartItems.length>0&&/*#__PURE__*/_jsx(\"button\",{className:\"w-full py-2 bg-blue-600 text-white font-semibold rounded-md shadow hover:bg-blue-700 transition-colors duration-200\",onClick:handleCheckout,children:\"Checkout\"})]})]})]})]})]});};export default UserPanel;","map":{"version":3,"names":["React","useEffect","useState","Navbar","FaShoppingCart","FaPlus","FaMinus","backgroundImage","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","UserPanel","products","setProducts","error","setError","expandedCard","setExpandedCard","cartItems","setCartItems","isCartOpen","setIsCartOpen","successMessage","setSuccessMessage","totalPrice","reduce","total","item","quantity","price","cartCount","fetchProducts","response","fetch","data","json","ok","message","err","addToCart","productId","productName","productPrice","prevItems","existingItem","find","id","map","_objectSpread","name","concat","toggleExpandCard","index","prev","handleCartClick","timer","setTimeout","clearTimeout","handleCheckout","length","console","log","selectedItems","items","allProducts","result","product","_id","storeInventory","Map","priceInCents","totalPriceInCents","i","get","warn","finalCheckoutResult","method","headers","body","JSON","stringify","Array","from","then","res","Promise","reject","_ref","url","window","location","catch","e","alert","children","className","onClick","size","isBlurred","src","img","alt","category","xmlns","viewBox","fillRule","d","clipRule","stock","description","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","cartItem","filter"],"sources":["C:/Users/Abdullah Usama/Desktop/we_project/frontend/src/components/UserPanel.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import Navbar from \"./Navbar\";\r\n// import { FaShoppingCart } from \"react-icons/fa\"; // Importing the cart icon\r\n// import { useNavigate } from \"react-router-dom\"; // Importing navigation hook\r\n\r\n// const UserPanel = () => {\r\n//   const [products, setProducts] = useState([]);\r\n//   const [error, setError] = useState(null);\r\n//   const [expandedCard, setExpandedCard] = useState(null); // Track which card is expanded\r\n//   const [cartCount, setCartCount] = useState(0); // Track the number of items in the cart\r\n//   const [successMessage, setSuccessMessage] = useState(null); // Track success messages\r\n\r\n//   const navigate = useNavigate(); // Initialize navigation\r\n\r\n//   // Fetch products from the API\r\n//   useEffect(() => {\r\n//     const fetchProducts = async () => {\r\n//       try {\r\n//         const response = await fetch(\"http://localhost:5000/api/products\");\r\n//         const data = await response.json();\r\n//         if (response.ok) {\r\n//           setProducts(data);\r\n//         } else {\r\n//           setError(data.message || \"Error fetching products\");\r\n//         }\r\n//       } catch (err) {\r\n//         setError(\"An error occurred while fetching products\");\r\n//       }\r\n//     };\r\n\r\n//     fetchProducts();\r\n//   }, []);\r\n\r\n//   // Handle adding products to the cart\r\n//   const addToCart = (productId, productName) => {\r\n//     setCartCount((prevCount) => prevCount + 1); // Increment cart count\r\n//     setSuccessMessage(`âœ… ${productName} has been added to your cart!`); // Set success message\r\n//     // Add functionality to send the product to the backend/cart here\r\n//   };\r\n\r\n//   // Toggle card expansion\r\n//   const toggleExpandCard = (index) => {\r\n//     setExpandedCard((prev) => (prev === index ? null : index)); // Toggle expanded card\r\n//     setSuccessMessage(null); // Clear any existing success messages when toggling cards\r\n//   };\r\n\r\n//   // Handle cart icon click\r\n//   const handleCartClick = () => {\r\n//     navigate(\"/cart\"); // Redirect to the cart page\r\n//   };\r\n\r\n//   // Effect to auto-dismiss success messages after 3 seconds\r\n//   useEffect(() => {\r\n//     if (successMessage) {\r\n//       const timer = setTimeout(() => {\r\n//         setSuccessMessage(null); // Clear the success message\r\n//       }, 3000); // 3 seconds\r\n\r\n//       // Cleanup the timer if the component unmounts or successMessage changes\r\n//       return () => clearTimeout(timer);\r\n//     }\r\n//   }, [successMessage]);\r\n\r\n//   return (\r\n//     <>\r\n//       <Navbar />\r\n//       <div className=\"bg-gray-50 min-h-screen relative\">\r\n//         <div className=\"container mx-auto py-8 px-4 relative\">\r\n//           {/* Cart Icon */}\r\n//           <div className=\"absolute top-4 right-4\">\r\n//             <button\r\n//               onClick={handleCartClick}\r\n//               className=\"relative text-gray-700 hover:text-green-700 focus:outline-none\"\r\n//               aria-label=\"Go to cart\"\r\n//             >\r\n//               <FaShoppingCart size={24} />\r\n//               {cartCount > 0 && (\r\n//                 <span className=\"absolute top-0 right-0 block h-2 w-2 rounded-full bg-red-600\"></span>\r\n//               )}\r\n//             </button>\r\n//           </div>\r\n\r\n//           <h2 className=\"text-3xl font-bold text-green-700 text-center mb-8\">\r\n//             Explore Our Products\r\n//           </h2>\r\n//           {error && (\r\n//             <div className=\"text-red-500 text-center mb-4\">{error}</div>\r\n//           )}\r\n\r\n//           {/* Background and Cards */}\r\n//           <div className=\"relative\">\r\n//             {expandedCard !== null && (\r\n//               <div\r\n//                 className=\"fixed inset-0 bg-gray-800 bg-opacity-40 z-10\"\r\n//                 onClick={() => setExpandedCard(null)}\r\n//               ></div>\r\n//             )}\r\n\r\n//             <div\r\n//               className={`grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6 ${\r\n//                 expandedCard !== null ? \"relative\" : \"\"\r\n//               }`}\r\n//             >\r\n//               {products.map((product, index) => {\r\n//                 // Determine if the card should be blurred\r\n//                 const isBlurred =\r\n//                   expandedCard !== null && expandedCard !== index;\r\n\r\n//                 return (\r\n//                   <div\r\n//                     key={product._id}\r\n//                     className={`relative bg-white border border-gray-200 rounded-lg shadow-sm transition-transform transform ${\r\n//                       expandedCard === index\r\n//                         ? \"scale-105 shadow-2xl z-20 cursor-pointer\"\r\n//                         : \"hover:shadow-md cursor-pointer\"\r\n//                     } ${isBlurred ? \"blur-sm pointer-events-none\" : \"\"}`}\r\n//                     onClick={() => toggleExpandCard(index)} // Toggle card expansion\r\n//                   >\r\n//                     <img\r\n//                       src={product.img}\r\n//                       alt={product.name}\r\n//                       className=\"w-full h-48 object-cover rounded-t-md\"\r\n//                     />\r\n//                     <div className=\"p-4\">\r\n//                       <h3 className=\"text-xl font-semibold text-gray-800\">\r\n//                         {product.name}\r\n//                       </h3>\r\n//                       <p className=\"text-gray-600 text-sm mb-2\">\r\n//                         Category: {product.category}\r\n//                       </p>\r\n//                       <p className=\"text-gray-600 mb-4\">\r\n//                         Price: Rs.{product.price}\r\n//                       </p>\r\n\r\n//                       {/* Conditionally render additional details */}\r\n//                       {expandedCard === index && (\r\n//                         <div className=\"mt-4 text-gray-700 relative\">\r\n//                           {/* Success Message */}\r\n//                           {successMessage && (\r\n//                             <div className=\"mb-2 bg-green-100 border border-green-400 text-green-700 px-4 py-2 rounded-md shadow-lg flex items-center transition-opacity duration-500\">\r\n//                               <span className=\"mr-2\">{successMessage}</span>\r\n//                               <svg\r\n//                                 className=\"w-4 h-4 fill-current text-green-700 cursor-pointer\"\r\n//                                 xmlns=\"http://www.w3.org/2000/svg\"\r\n//                                 viewBox=\"0 0 20 20\"\r\n//                                 onClick={() => setSuccessMessage(null)} // Allow manual dismissal\r\n//                               >\r\n//                                 <path\r\n//                                   fillRule=\"evenodd\"\r\n//                                   d=\"M10 8.586L15.95 2.636a1 1 0 011.414 1.414L11.414 10l5.95 5.95a1 1 0 01-1.414 1.414L10 11.414l-5.95 5.95a1 1 0 01-1.414-1.414L8.586 10 2.636 4.05a1 1 0 011.414-1.414L10 8.586z\"\r\n//                                   clipRule=\"evenodd\"\r\n//                                 />\r\n//                               </svg>\r\n//                             </div>\r\n//                           )}\r\n\r\n//                           <p className=\"text-sm mb-2\">\r\n//                             <strong>Stock:</strong> {product.stock}\r\n//                           </p>\r\n//                           <p className=\"text-sm mb-2\">\r\n//                             <strong>Description:</strong> {product.description}\r\n//                           </p>\r\n//                           <button\r\n//                             onClick={(e) => {\r\n//                               e.stopPropagation(); // Prevent card toggle on button click\r\n//                               addToCart(product._id, product.name); // Pass product name\r\n//                             }}\r\n//                             className=\"w-full py-2 bg-green-600 text-white font-medium rounded-md shadow hover:bg-green-700 transition focus:outline-none focus:ring-2 focus:ring-green-400\"\r\n//                           >\r\n//                             Add to Cart\r\n//                           </button>\r\n//                         </div>\r\n//                       )}\r\n//                     </div>\r\n//                   </div>\r\n//                 );\r\n//               })}\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default UserPanel;\r\n\r\n//-----------side panel cart----------------------------\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Navbar from \"./Navbar\";\r\nimport { FaShoppingCart } from \"react-icons/fa\"; // Importing the cart icon\r\nimport { FaPlus, FaMinus } from \"react-icons/fa\";\r\nimport backgroundImage from \"./img/background.png\";\r\n\r\nconst UserPanel = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [expandedCard, setExpandedCard] = useState(null); // Track which card is expanded\r\n  const [cartItems, setCartItems] = useState([]); // Track items in the cart\r\n  const [isCartOpen, setIsCartOpen] = useState(false); // Track cart panel visibility\r\n  const [successMessage, setSuccessMessage] = useState(null); // Track success messages\r\n  // Calculate total price of the cart\r\n  const totalPrice = cartItems.reduce(\r\n    (total, item) => total + item.quantity * item.price,\r\n    0\r\n  );\r\n\r\n  // Calculate total cart count\r\n  const cartCount = cartItems.reduce((total, item) => total + item.quantity, 0);\r\n\r\n  // Fetch products from the API\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/api/products\");\r\n        const data = await response.json();\r\n        if (response.ok) {\r\n          setProducts(data);\r\n        } else {\r\n          setError(data.message || \"Error fetching products\");\r\n        }\r\n      } catch (err) {\r\n        setError(\"An error occurred while fetching products\");\r\n      }\r\n    };\r\n\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  // Handle adding products to the cart\r\n  // const addToCart = (productId, productName) => {\r\n  //   setCartItems((prevItems) => {\r\n  //     const existingItem = prevItems.find((item) => item.id === productId);\r\n  //     if (existingItem) {\r\n  //       // If item exists, increase quantity\r\n  //       return prevItems.map((item) =>\r\n  //         item.id === productId\r\n  //           ? { ...item, quantity: item.quantity + 1 }\r\n  //           : item\r\n  //       );\r\n  //     } else {\r\n  //       // If item doesn't exist, add new item with quantity 1\r\n  //       return [\r\n  //         ...prevItems,\r\n  //         { id: productId, name: productName, quantity: 1 },\r\n  //       ];\r\n  //     }\r\n  //   });\r\n  //   setSuccessMessage(`âœ…Added`); // Set success message\r\n  // };\r\n  const addToCart = (productId, productName, productPrice) => {\r\n    setCartItems((prevItems) => {\r\n      const existingItem = prevItems.find((item) => item.id === productId);\r\n      if (existingItem) {\r\n        // If item exists, increase quantity\r\n        return prevItems.map((item) =>\r\n          item.id === productId\r\n            ? { ...item, quantity: item.quantity + 1 }\r\n            : item\r\n        );\r\n      } else {\r\n        // If item doesn't exist, add new item with quantity 1\r\n        return [\r\n          ...prevItems,\r\n          {\r\n            id: productId,\r\n            name: productName,\r\n            price: productPrice,\r\n            quantity: 1,\r\n          },\r\n        ];\r\n      }\r\n    });\r\n    setSuccessMessage(`âœ… ${productName} has been added to your cart!`); // Set success message\r\n  };\r\n\r\n  // Toggle card expansion\r\n  const toggleExpandCard = (index) => {\r\n    setExpandedCard((prev) => (prev === index ? null : index)); // Toggle expanded card\r\n    setSuccessMessage(null); // Clear any existing success messages when toggling cards\r\n  };\r\n\r\n  // Handle cart icon click to open the cart panel\r\n  const handleCartClick = () => {\r\n    setIsCartOpen(true); // Open the cart panel\r\n  };\r\n\r\n  // Effect to auto-dismiss success messages after 3 seconds\r\n  useEffect(() => {\r\n    if (successMessage) {\r\n      const timer = setTimeout(() => {\r\n        setSuccessMessage(null); // Clear the success message\r\n      }, 3000); // 3 seconds\r\n\r\n      // Cleanup the timer if the component unmounts or successMessage changes\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [successMessage]);\r\n\r\n  const handleCheckout = async () => {\r\n    if (cartItems.length === 0) {\r\n      console.log(\"empty shit\");\r\n    }\r\n    console.log(\"checkout clicked\");\r\n    // console.log(cartItems);\r\n    const selectedItems = {\r\n      items: cartItems.map((item) => ({\r\n        id: item.id, // Keep the id the same\r\n        quantity: item.quantity, // Keep the quantity as is\r\n      })),\r\n    };\r\n    // console.log(selectedItems);\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/get-all-products\");\r\n      const allProducts = await response.json();\r\n      const result = allProducts.map((product) => ({\r\n        _id: product._id,\r\n        name: product.name,\r\n        price: product.price,\r\n      }));\r\n\r\n      const storeInventory = new Map(\r\n        result.map((item) => [\r\n          item._id,\r\n          { priceInCents: item.price, name: item.name },\r\n        ])\r\n      );\r\n      // console.log(storeInventory);\r\n      // console.log(selectedItems);\r\n\r\n      let totalPriceInCents = 0;\r\n\r\n      // Iterate through selected items\r\n      for (let i = 0; i < selectedItems.items.length; i++) {\r\n        const { id, quantity } = selectedItems.items[i];\r\n        const product = storeInventory.get(id);\r\n\r\n        if (product) {\r\n          totalPriceInCents += product.priceInCents * quantity;\r\n        } else {\r\n          console.warn(`Product with ID ${id} not found in store inventory.`);\r\n        }\r\n      }\r\n\r\n      console.log(`Total Price: ${totalPriceInCents} cents`);\r\n\r\n      if (totalPriceInCents >= 150) {\r\n        const finalCheckoutResult = await fetch(\r\n          \"http://localhost:5000/stripe-payout-session\",\r\n          {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n              selectedItems,\r\n              storeInventory: Array.from(storeInventory),\r\n            }),\r\n          }\r\n        )\r\n          .then((res) => {\r\n            if (res.ok) return res.json();\r\n            return res.json().then((json) => Promise.reject(json));\r\n          })\r\n          .then(({ url }) => {\r\n            console.log(url);\r\n            window.location = url;\r\n          })\r\n          .catch((e) => {\r\n            console.error(e.error);\r\n          });\r\n      } else {\r\n        console.log(\"price must be greater than Rs. 150\");\r\n        alert(\"Total Price must be greater than Rs. 150\");\r\n      }\r\n    } catch (e) {\r\n      console.log(\"Error: \", e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div\r\n        className=\" bg-green-50 min-h-screen relative\"\r\n        // style={{\r\n        //   backgroundImage: `url(${backgroundImage})`, // Use the imported image\r\n        // }}\r\n      >\r\n        <div className=\"container mx-auto py-8 px-4 relative\">\r\n          {/* Cart Icon */}\r\n          <div className=\"absolute top-4 right-4\">\r\n            <button\r\n              onClick={handleCartClick} // Open the cart panel\r\n              className=\"relative text-gray-700 hover:text-green-700 focus:outline-none\"\r\n              aria-label=\"Open cart\"\r\n            >\r\n              <FaShoppingCart size={24} />\r\n              {cartCount > 0 && (\r\n                <span className=\"absolute top-0 right-0 block h-2 w-2 rounded-full bg-red-600\"></span>\r\n              )}\r\n            </button>\r\n          </div>\r\n\r\n          <h2 className=\"text-3xl font-bold text-green-700 text-center mb-8\">\r\n            Explore Our Products\r\n          </h2>\r\n          {error && (\r\n            <div className=\"text-red-500 text-center mb-4\">{error}</div>\r\n          )}\r\n\r\n          {/* Background and Cards */}\r\n          <div className=\"relative\">\r\n            {expandedCard !== null && (\r\n              <div\r\n                className=\"fixed inset-0 bg-gray-800 bg-opacity-40 z-10\"\r\n                onClick={() => setExpandedCard(null)}\r\n              ></div>\r\n            )}\r\n\r\n            <div\r\n              className={`grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6 ${\r\n                expandedCard !== null ? \"relative\" : \"\"\r\n              }`}\r\n            >\r\n              {products.map((product, index) => {\r\n                // Determine if the card should be blurred\r\n                const isBlurred =\r\n                  expandedCard !== null && expandedCard !== index;\r\n\r\n                return (\r\n                  <div\r\n                    key={product._id}\r\n                    className={`relative bg-white border border-gray-200 rounded-lg shadow-sm transition-transform transform ${\r\n                      expandedCard === index\r\n                        ? \"scale-105 shadow-2xl z-20 cursor-pointer\"\r\n                        : \"hover:shadow-xl cursor-pointer\"\r\n                    } ${isBlurred ? \"blur-sm pointer-events-none\" : \"\"}`}\r\n                    onClick={() => toggleExpandCard(index)} // Toggle card expansion\r\n                  >\r\n                    <img\r\n                      src={product.img}\r\n                      alt={product.name}\r\n                      className=\"w-full h-48 object-cover rounded-t-md\"\r\n                    />\r\n                    <div className=\"p-4\">\r\n                      <h3 className=\"text-xl font-semibold text-gray-800\">\r\n                        {product.name}\r\n                      </h3>\r\n                      <p className=\"text-gray-600 text-sm mb-2\">\r\n                        Category: {product.category}\r\n                      </p>\r\n                      <p className=\"text-gray-600 mb-4\">\r\n                        Price: Rs.{product.price}\r\n                      </p>\r\n\r\n                      {/* Conditionally render additional details */}\r\n                      {expandedCard === index && (\r\n                        <div className=\"mt-4 text-gray-700 relative\">\r\n                          {/* Success Message */}\r\n                          {successMessage && (\r\n                            <div className=\"mb-2 bg-green-100 border border-green-400 text-green-700 px-4 py-2 rounded-md shadow-lg flex items-center transition-opacity duration-500\">\r\n                              <span className=\"mr-2\">{successMessage}</span>\r\n                              <svg\r\n                                className=\"w-4 h-4 fill-current text-green-700 cursor-pointer\"\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                viewBox=\"0 0 20 20\"\r\n                                onClick={() => setSuccessMessage(null)} // Allow manual dismissal\r\n                              >\r\n                                <path\r\n                                  fillRule=\"evenodd\"\r\n                                  d=\"M10 8.586L15.95 2.636a1 1 0 011.414 1.414L11.414 10l5.95 5.95a1 1 0 01-1.414 1.414L10 11.414l-5.95 5.95a1 1 0 01-1.414-1.414L8.586 10 2.636 4.05a1 1 0 011.414-1.414L10 8.586z\"\r\n                                  clipRule=\"evenodd\"\r\n                                />\r\n                              </svg>\r\n                            </div>\r\n                          )}\r\n\r\n                          <p className=\"text-sm mb-2\">\r\n                            <strong>Stock:</strong> {product.stock}\r\n                          </p>\r\n                          <p className=\"text-sm mb-2\">\r\n                            <strong>Description:</strong> {product.description}\r\n                          </p>\r\n                          {/* <button\r\n                            onClick={(e) => {\r\n                              e.stopPropagation(); // Prevent card toggle on button click\r\n                              addToCart(product._id, product.name); // Pass product name\r\n                            }}\r\n                            className=\"w-full py-2 bg-green-600 text-white font-medium rounded-md shadow hover:bg-green-700 transition focus:outline-none focus:ring-2 focus:ring-green-400\"\r\n                          >\r\n                            Add to Cart\r\n                          </button> */}\r\n                          <button\r\n                            onClick={() =>\r\n                              addToCart(\r\n                                product._id,\r\n                                product.name,\r\n                                product.price\r\n                              )\r\n                            }\r\n                            className=\"w-full py-2 bg-green-600 text-white font-medium rounded-md shadow hover:bg-green-700 transition focus:outline-none\"\r\n                          >\r\n                            Add to Cart\r\n                          </button>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Side Panel for Cart */}\r\n        {isCartOpen && (\r\n          <>\r\n            {/* Overlay */}\r\n            <div\r\n              className=\"fixed inset-0 bg-black bg-opacity-50 z-30\"\r\n              onClick={() => setIsCartOpen(false)}\r\n            ></div>\r\n\r\n            {/* Side Panel */}\r\n            <div className=\"fixed top-0 right-0 w-80 bg-white h-full shadow-lg z-40 transform transition-transform duration-300\">\r\n              <div className=\"flex justify-between items-center p-4 border-b\">\r\n                <h2 className=\"text-xl font-semibold\">Your Cart</h2>\r\n                <button\r\n                  onClick={() => setIsCartOpen(false)}\r\n                  aria-label=\"Close cart\"\r\n                >\r\n                  <svg\r\n                    className=\"w-6 h-6 text-gray-700\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    fill=\"none\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    stroke=\"currentColor\"\r\n                  >\r\n                    <path\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      strokeWidth={2}\r\n                      d=\"M6 18L18 6M6 6l12 12\"\r\n                    />\r\n                  </svg>\r\n                </button>\r\n              </div>\r\n\r\n              <div className=\"p-4 overflow-y-auto h-[calc(100%-4rem)]\">\r\n                {cartItems.length === 0 ? (\r\n                  <p className=\"text-gray-600\">Your cart is empty.</p>\r\n                ) : (\r\n                  cartItems.map((item) => (\r\n                    <div\r\n                      key={item.id}\r\n                      className=\"flex justify-between items-center mb-4 border-b pb-2\"\r\n                    >\r\n                      <div>\r\n                        <h3 className=\"font-medium\">{item.name}</h3>\r\n                        <p className=\"text-sm text-gray-600\">\r\n                          Quantity: {item.quantity}\r\n                        </p>\r\n                      </div>\r\n                      <div className=\"flex items-center space-x-2\">\r\n                        <button\r\n                          onClick={() =>\r\n                            setCartItems((prevItems) =>\r\n                              prevItems.map((cartItem) =>\r\n                                cartItem.id === item.id\r\n                                  ? {\r\n                                      ...cartItem,\r\n                                      quantity: cartItem.quantity + 1,\r\n                                    }\r\n                                  : cartItem\r\n                              )\r\n                            )\r\n                          }\r\n                          className=\"flex items-center justify-center w-8 h-8 bg-green-300 text-white rounded-full hover:bg-green-700 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-green-400\"\r\n                          aria-label=\"Increase quantity\"\r\n                        >\r\n                          <FaPlus />\r\n                        </button>\r\n\r\n                        <button\r\n                          onClick={() =>\r\n                            setCartItems((prevItems) =>\r\n                              prevItems\r\n                                .map((cartItem) =>\r\n                                  cartItem.id === item.id\r\n                                    ? {\r\n                                        ...cartItem,\r\n                                        quantity: cartItem.quantity - 1,\r\n                                      }\r\n                                    : cartItem\r\n                                )\r\n                                .filter((cartItem) => cartItem.quantity > 0)\r\n                            )\r\n                          }\r\n                          className=\"flex items-center justify-center w-8 h-8 bg-red-300 text-white rounded-full hover:bg-red-700 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-red-400\"\r\n                          aria-label=\"Decrease quantity\"\r\n                        >\r\n                          <FaMinus />\r\n                        </button>\r\n                        <button\r\n                          onClick={() =>\r\n                            setCartItems((prevItems) =>\r\n                              prevItems.filter(\r\n                                (cartItem) => cartItem.id !== item.id\r\n                              )\r\n                            )\r\n                          }\r\n                          className=\"px-2 py-1 bg-gray-300 text-gray-700 rounded\"\r\n                          aria-label=\"Remove item\"\r\n                        >\r\n                          Remove\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  ))\r\n                )}\r\n                {cartItems.length > 0 && (\r\n                  <div className=\"mt-4 border-t pt-2\">\r\n                    <h3 className=\"text-lg font-semibold\">\r\n                      Total Price: Rs.{totalPrice}\r\n                    </h3>\r\n                  </div>\r\n                )}\r\n\r\n                {cartItems.length > 0 && (\r\n                  <button\r\n                    className=\"w-full py-2 bg-blue-600 text-white font-semibold rounded-md shadow hover:bg-blue-700 transition-colors duration-200\"\r\n                    onClick={handleCheckout}\r\n                  >\r\n                    Checkout\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserPanel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}